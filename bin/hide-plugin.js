// Generated by Haxe 4.2.1+bf9ff69
var $hx_exports = typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this;
$hx_exports["hide"] = $hx_exports["hide"] || {};
var $global = typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this;
var $estr = function() { return js.Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {};
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Mat2 = {};
Mat2._new = function(a00,a01,a10,a11) {
	var this1 = new Mat2Data(a00,a01,a10,a11);
	return this1;
};
Mat2.copyFrom = function(this1,v) {
	var v1 = v;
	var this2 = this1.c0;
	var v = v1.c0;
	this2.x = v.x;
	this2.y = v.y;
	var this2 = this1.c1;
	var v = v1.c1;
	this2.x = v.x;
	this2.y = v.y;
	return this1;
};
Mat2.clone = function(this1) {
	var this2 = new Mat2Data(this1.c0.x,this1.c0.y,this1.c1.x,this1.c1.y);
	return this2;
};
Mat2.matrixCompMult = function(this1,n) {
	var n1 = n;
	var this2 = new Mat2Data(this1.c0.x * n1.c0.x,this1.c0.y * n1.c0.y,this1.c1.x * n1.c1.x,this1.c1.y * n1.c1.y);
	return this2;
};
Mat2.transpose = function(this1) {
	var this2 = new Mat2Data(this1.c0.x,this1.c1.x,this1.c0.y,this1.c1.y);
	return this2;
};
Mat2.determinant = function(this1) {
	var m = this1;
	return m.c0.x * m.c1.y - m.c1.x * m.c0.y;
};
Mat2.inverse = function(this1) {
	var m = this1;
	var m1 = this1;
	var f = 1.0 / (m1.c0.x * m1.c1.y - m1.c1.x * m1.c0.y);
	var this1 = new Mat2Data(m.c1.y * f,-m.c0.y * f,-m.c1.x * f,m.c0.x * f);
	return this1;
};
Mat2.adjoint = function(this1) {
	var m = this1;
	var this1 = new Mat2Data(m.c1.y,-m.c0.y,-m.c1.x,m.c0.x);
	return this1;
};
Mat2.toString = function(this1) {
	return "mat2(" + ("" + this1.c0.x + ", " + this1.c0.y + ", ") + ("" + this1.c1.x + ", " + this1.c1.y) + ")";
};
Mat2.arrayRead = function(this1,i) {
	switch(i) {
	case 0:
		var this2 = this1.c0;
		var this3 = new Vec2Data(this2.x,this2.y);
		return this3;
	case 1:
		var this2 = this1.c1;
		var this1 = new Vec2Data(this2.x,this2.y);
		return this1;
	default:
		return null;
	}
};
Mat2.arrayWrite = function(this1,i,v) {
	switch(i) {
	case 0:
		var this2 = this1.c0;
		this2.x = v.x;
		this2.y = v.y;
		return this2;
	case 1:
		var this2 = this1.c1;
		this2.x = v.x;
		this2.y = v.y;
		return this2;
	default:
		return null;
	}
};
Mat2.neg = function(m) {
	var m1 = m;
	var this1 = new Mat2Data(-m1.c0.x,-m1.c0.y,-m1.c1.x,-m1.c1.y);
	return this1;
};
Mat2.prefixIncrement = function(m) {
	var _m = m;
	_m.c0.x += 1;
	_m.c0.y += 1;
	_m.c1.x += 1;
	_m.c1.y += 1;
	var this1 = new Mat2Data(m.c0.x,m.c0.y,m.c1.x,m.c1.y);
	return this1;
};
Mat2.prefixDecrement = function(m) {
	var _m = m;
	_m.c0.x -= 1;
	_m.c0.y -= 1;
	_m.c1.x -= 1;
	_m.c1.y -= 1;
	var this1 = new Mat2Data(m.c0.x,m.c0.y,m.c1.x,m.c1.y);
	return this1;
};
Mat2.postfixIncrement = function(m) {
	var this1 = new Mat2Data(m.c0.x,m.c0.y,m.c1.x,m.c1.y);
	var ret = this1;
	var m1 = m;
	m1.c0.x += 1;
	m1.c0.y += 1;
	m1.c1.x += 1;
	m1.c1.y += 1;
	return ret;
};
Mat2.postfixDecrement = function(m) {
	var this1 = new Mat2Data(m.c0.x,m.c0.y,m.c1.x,m.c1.y);
	var ret = this1;
	var m1 = m;
	m1.c0.x -= 1;
	m1.c0.y -= 1;
	m1.c1.x -= 1;
	m1.c1.y -= 1;
	return ret;
};
Mat2.mulEq = function(a,b) {
	var m = a;
	var n = b;
	var v_x = m.c0.x * n.c0.x + m.c1.x * n.c0.y;
	var v_y = m.c0.y * n.c0.x + m.c1.y * n.c0.y;
	var v_x1 = m.c0.x * n.c1.x + m.c1.x * n.c1.y;
	var v_y1 = m.c0.y * n.c1.x + m.c1.y * n.c1.y;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	return a;
};
Mat2.mulEqScalar = function(a,f) {
	var m = a;
	var v_x = m.c0.x * f;
	var v_y = m.c0.y * f;
	var v_x1 = m.c1.x * f;
	var v_y1 = m.c1.y * f;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	return a;
};
Mat2.divEq = function(a,b) {
	var m = b;
	var n_c0_x = 1.0 / m.c0.x;
	var n_c0_y = 1.0 / m.c0.y;
	var n_c1_x = 1.0 / m.c1.x;
	var n_c1_y = 1.0 / m.c1.y;
	var v_x = a.c0.x * n_c0_x;
	var v_y = a.c0.y * n_c0_y;
	var v_x1 = a.c1.x * n_c1_x;
	var v_y1 = a.c1.y * n_c1_y;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	return a;
};
Mat2.divEqScalar = function(a,f) {
	var m = a;
	var v_x = m.c0.x / f;
	var v_y = m.c0.y / f;
	var v_x1 = m.c1.x / f;
	var v_y1 = m.c1.y / f;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	return a;
};
Mat2.addEq = function(a,b) {
	var m = a;
	var n = b;
	var v_x = m.c0.x + n.c0.x;
	var v_y = m.c0.y + n.c0.y;
	var v_x1 = m.c1.x + n.c1.x;
	var v_y1 = m.c1.y + n.c1.y;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	return a;
};
Mat2.addEqScalar = function(a,f) {
	var m = a;
	var v_x = m.c0.x + f;
	var v_y = m.c0.y + f;
	var v_x1 = m.c1.x + f;
	var v_y1 = m.c1.y + f;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	return a;
};
Mat2.subEq = function(a,b) {
	var m = a;
	var n = b;
	var v_x = m.c0.x - n.c0.x;
	var v_y = m.c0.y - n.c0.y;
	var v_x1 = m.c1.x - n.c1.x;
	var v_y1 = m.c1.y - n.c1.y;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	return a;
};
Mat2.subEqScalar = function(a,f) {
	var m = a;
	var v_x = m.c0.x - f;
	var v_y = m.c0.y - f;
	var v_x1 = m.c1.x - f;
	var v_y1 = m.c1.y - f;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	return a;
};
Mat2.add = function(m,n) {
	var m1 = m;
	var n1 = n;
	var this1 = new Mat2Data(m1.c0.x + n1.c0.x,m1.c0.y + n1.c0.y,m1.c1.x + n1.c1.x,m1.c1.y + n1.c1.y);
	return this1;
};
Mat2.addScalar = function(m,f) {
	var m1 = m;
	var this1 = new Mat2Data(m1.c0.x + f,m1.c0.y + f,m1.c1.x + f,m1.c1.y + f);
	return this1;
};
Mat2.sub = function(m,n) {
	var m1 = m;
	var n1 = n;
	var this1 = new Mat2Data(m1.c0.x - n1.c0.x,m1.c0.y - n1.c0.y,m1.c1.x - n1.c1.x,m1.c1.y - n1.c1.y);
	return this1;
};
Mat2.subScalar = function(m,f) {
	var m1 = m;
	var this1 = new Mat2Data(m1.c0.x - f,m1.c0.y - f,m1.c1.x - f,m1.c1.y - f);
	return this1;
};
Mat2.subScalarInv = function(f,m) {
	var m1 = m;
	var this1 = new Mat2Data(f - m1.c0.x,f - m1.c0.y,f - m1.c1.x,f - m1.c1.y);
	return this1;
};
Mat2.mul = function(m,n) {
	var m1 = m;
	var n1 = n;
	var this1 = new Mat2Data(m1.c0.x * n1.c0.x + m1.c1.x * n1.c0.y,m1.c0.y * n1.c0.x + m1.c1.y * n1.c0.y,m1.c0.x * n1.c1.x + m1.c1.x * n1.c1.y,m1.c0.y * n1.c1.x + m1.c1.y * n1.c1.y);
	return this1;
};
Mat2.postMulVec2 = function(m,v) {
	var m1 = m;
	var this1 = new Vec2Data(m1.c0.x * v.x + m1.c1.x * v.y,m1.c0.y * v.x + m1.c1.y * v.y);
	return this1;
};
Mat2.preMulVec2 = function(v,m) {
	var m1 = m;
	var b = m1.c0;
	var b1 = m1.c1;
	var this1 = new Vec2Data(v.x * b.x + v.y * b.y,v.x * b1.x + v.y * b1.y);
	return this1;
};
Mat2.mulScalar = function(m,f) {
	var m1 = m;
	var this1 = new Mat2Data(m1.c0.x * f,m1.c0.y * f,m1.c1.x * f,m1.c1.y * f);
	return this1;
};
Mat2.div = function(m,n) {
	var m1 = n;
	var n_c0_x = 1.0 / m1.c0.x;
	var n_c0_y = 1.0 / m1.c0.y;
	var n_c1_x = 1.0 / m1.c1.x;
	var n_c1_y = 1.0 / m1.c1.y;
	var this1 = new Mat2Data(m.c0.x * n_c0_x,m.c0.y * n_c0_y,m.c1.x * n_c1_x,m.c1.y * n_c1_y);
	return this1;
};
Mat2.divScalar = function(m,f) {
	var m1 = m;
	var this1 = new Mat2Data(m1.c0.x / f,m1.c0.y / f,m1.c1.x / f,m1.c1.y / f);
	return this1;
};
Mat2.divScalarInv = function(f,m) {
	var m1 = m;
	var this1 = new Mat2Data(f / m1.c0.x,f / m1.c0.y,f / m1.c1.x,f / m1.c1.y);
	return this1;
};
Mat2.equal = function(m,n) {
	var m1 = m;
	var n1 = n;
	var a = m1.c0;
	var b = n1.c0;
	if(a.x == b.x && a.y == b.y) {
		var a = m1.c1;
		var b = n1.c1;
		if(a.x == b.x) {
			return a.y == b.y;
		} else {
			return false;
		}
	} else {
		return false;
	}
};
Mat2.notEqual = function(m,n) {
	var m1 = m;
	var n1 = n;
	var tmp;
	var a = m1.c0;
	var b = n1.c0;
	if(a.x == b.x && a.y == b.y) {
		var a = m1.c1;
		var b = n1.c1;
		tmp = a.x == b.x && a.y == b.y;
	} else {
		tmp = false;
	}
	return !tmp;
};
var Mat2Data = function(a00,a01,a10,a11) {
	var this1 = new Vec2Data(a00,a01);
	this.c0 = this1;
	var this1 = new Vec2Data(a10,a11);
	this.c1 = this1;
};
var Mat3 = {};
Mat3._new = function(a00,a01,a02,a10,a11,a12,a20,a21,a22) {
	var this1 = new Mat3Data(a00,a01,a02,a10,a11,a12,a20,a21,a22);
	return this1;
};
Mat3.copyFrom = function(this1,v) {
	var v1 = v;
	var this2 = this1.c0;
	var v = v1.c0;
	this2.x = v.x;
	this2.y = v.y;
	this2.z = v.z;
	var this2 = this1.c1;
	var v = v1.c1;
	this2.x = v.x;
	this2.y = v.y;
	this2.z = v.z;
	var this2 = this1.c2;
	var v = v1.c2;
	this2.x = v.x;
	this2.y = v.y;
	this2.z = v.z;
	return this1;
};
Mat3.clone = function(this1) {
	var this2 = new Mat3Data(this1.c0.x,this1.c0.y,this1.c0.z,this1.c1.x,this1.c1.y,this1.c1.z,this1.c2.x,this1.c2.y,this1.c2.z);
	return this2;
};
Mat3.matrixCompMult = function(this1,n) {
	var n1 = n;
	var this2 = new Mat3Data(this1.c0.x * n1.c0.x,this1.c0.y * n1.c0.y,this1.c0.z * n1.c0.z,this1.c1.x * n1.c1.x,this1.c1.y * n1.c1.y,this1.c1.z * n1.c1.z,this1.c2.x * n1.c2.x,this1.c2.y * n1.c2.y,this1.c2.z * n1.c2.z);
	return this2;
};
Mat3.transpose = function(this1) {
	var this2 = new Mat3Data(this1.c0.x,this1.c1.x,this1.c2.x,this1.c0.y,this1.c1.y,this1.c2.y,this1.c0.z,this1.c1.z,this1.c2.z);
	return this2;
};
Mat3.determinant = function(this1) {
	var m = this1;
	return m.c0.x * (m.c2.z * m.c1.y - m.c1.z * m.c2.y) + m.c0.y * (-m.c2.z * m.c1.x + m.c1.z * m.c2.x) + m.c0.z * (m.c2.y * m.c1.x - m.c1.y * m.c2.x);
};
Mat3.inverse = function(this1) {
	var m = this1;
	var b01 = m.c2.z * m.c1.y - m.c1.z * m.c2.y;
	var b11 = -m.c2.z * m.c1.x + m.c1.z * m.c2.x;
	var b21 = m.c2.y * m.c1.x - m.c1.y * m.c2.x;
	var det = m.c0.x * b01 + m.c0.y * b11 + m.c0.z * b21;
	var f = 1.0 / det;
	var this1 = new Mat3Data(b01 * f,(-m.c2.z * m.c0.y + m.c0.z * m.c2.y) * f,(m.c1.z * m.c0.y - m.c0.z * m.c1.y) * f,b11 * f,(m.c2.z * m.c0.x - m.c0.z * m.c2.x) * f,(-m.c1.z * m.c0.x + m.c0.z * m.c1.x) * f,b21 * f,(-m.c2.y * m.c0.x + m.c0.y * m.c2.x) * f,(m.c1.y * m.c0.x - m.c0.y * m.c1.x) * f);
	return this1;
};
Mat3.adjoint = function(this1) {
	var m = this1;
	var this1 = new Mat3Data(m.c1.y * m.c2.z - m.c1.z * m.c2.y,m.c0.z * m.c2.y - m.c0.y * m.c2.z,m.c0.y * m.c1.z - m.c0.z * m.c1.y,m.c1.z * m.c2.x - m.c1.x * m.c2.z,m.c0.x * m.c2.z - m.c0.z * m.c2.x,m.c0.z * m.c1.x - m.c0.x * m.c1.z,m.c1.x * m.c2.y - m.c1.y * m.c2.x,m.c0.y * m.c2.x - m.c0.x * m.c2.y,m.c0.x * m.c1.y - m.c0.y * m.c1.x);
	return this1;
};
Mat3.toString = function(this1) {
	return "mat3(" + ("" + this1.c0.x + ", " + this1.c0.y + ", " + this1.c0.z + ", ") + ("" + this1.c1.x + ", " + this1.c1.y + ", " + this1.c1.z + ", ") + ("" + this1.c2.x + ", " + this1.c2.y + ", " + this1.c2.z) + ")";
};
Mat3.arrayRead = function(this1,i) {
	switch(i) {
	case 0:
		var this2 = this1.c0;
		var this3 = new Vec3Data(this2.x,this2.y,this2.z);
		return this3;
	case 1:
		var this2 = this1.c1;
		var this3 = new Vec3Data(this2.x,this2.y,this2.z);
		return this3;
	case 2:
		var this2 = this1.c2;
		var this1 = new Vec3Data(this2.x,this2.y,this2.z);
		return this1;
	default:
		return null;
	}
};
Mat3.arrayWrite = function(this1,i,v) {
	switch(i) {
	case 0:
		var this2 = this1.c0;
		this2.x = v.x;
		this2.y = v.y;
		this2.z = v.z;
		return this2;
	case 1:
		var this2 = this1.c1;
		this2.x = v.x;
		this2.y = v.y;
		this2.z = v.z;
		return this2;
	case 2:
		var this2 = this1.c2;
		this2.x = v.x;
		this2.y = v.y;
		this2.z = v.z;
		return this2;
	default:
		return null;
	}
};
Mat3.neg = function(m) {
	var m1 = m;
	var this1 = new Mat3Data(-m1.c0.x,-m1.c0.y,-m1.c0.z,-m1.c1.x,-m1.c1.y,-m1.c1.z,-m1.c2.x,-m1.c2.y,-m1.c2.z);
	return this1;
};
Mat3.prefixIncrement = function(m) {
	var _m = m;
	var a = _m.c0;
	a.x += 1;
	a.y += 1;
	a.z += 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var a = _m.c1;
	a.x += 1;
	a.y += 1;
	a.z += 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var a = _m.c2;
	a.x += 1;
	a.y += 1;
	a.z += 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var this1 = new Mat3Data(m.c0.x,m.c0.y,m.c0.z,m.c1.x,m.c1.y,m.c1.z,m.c2.x,m.c2.y,m.c2.z);
	return this1;
};
Mat3.prefixDecrement = function(m) {
	var _m = m;
	var a = _m.c0;
	a.x -= 1;
	a.y -= 1;
	a.z -= 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var a = _m.c1;
	a.x -= 1;
	a.y -= 1;
	a.z -= 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var a = _m.c2;
	a.x -= 1;
	a.y -= 1;
	a.z -= 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var this1 = new Mat3Data(m.c0.x,m.c0.y,m.c0.z,m.c1.x,m.c1.y,m.c1.z,m.c2.x,m.c2.y,m.c2.z);
	return this1;
};
Mat3.postfixIncrement = function(m) {
	var this1 = new Mat3Data(m.c0.x,m.c0.y,m.c0.z,m.c1.x,m.c1.y,m.c1.z,m.c2.x,m.c2.y,m.c2.z);
	var ret = this1;
	var m1 = m;
	var a = m1.c0;
	a.x += 1;
	a.y += 1;
	a.z += 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var a = m1.c1;
	a.x += 1;
	a.y += 1;
	a.z += 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var a = m1.c2;
	a.x += 1;
	a.y += 1;
	a.z += 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	return ret;
};
Mat3.postfixDecrement = function(m) {
	var this1 = new Mat3Data(m.c0.x,m.c0.y,m.c0.z,m.c1.x,m.c1.y,m.c1.z,m.c2.x,m.c2.y,m.c2.z);
	var ret = this1;
	var m1 = m;
	var a = m1.c0;
	a.x -= 1;
	a.y -= 1;
	a.z -= 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var a = m1.c1;
	a.x -= 1;
	a.y -= 1;
	a.z -= 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var a = m1.c2;
	a.x -= 1;
	a.y -= 1;
	a.z -= 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	return ret;
};
Mat3.mulEq = function(a,b) {
	var m = a;
	var n = b;
	var v_x = m.c0.x * n.c0.x + m.c1.x * n.c0.y + m.c2.x * n.c0.z;
	var v_y = m.c0.y * n.c0.x + m.c1.y * n.c0.y + m.c2.y * n.c0.z;
	var v_z = m.c0.z * n.c0.x + m.c1.z * n.c0.y + m.c2.z * n.c0.z;
	var v_x1 = m.c0.x * n.c1.x + m.c1.x * n.c1.y + m.c2.x * n.c1.z;
	var v_y1 = m.c0.y * n.c1.x + m.c1.y * n.c1.y + m.c2.y * n.c1.z;
	var v_z1 = m.c0.z * n.c1.x + m.c1.z * n.c1.y + m.c2.z * n.c1.z;
	var v_x2 = m.c0.x * n.c2.x + m.c1.x * n.c2.y + m.c2.x * n.c2.z;
	var v_y2 = m.c0.y * n.c2.x + m.c1.y * n.c2.y + m.c2.y * n.c2.z;
	var v_z2 = m.c0.z * n.c2.x + m.c1.z * n.c2.y + m.c2.z * n.c2.z;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	this1.z = v_z;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	this1.z = v_z1;
	var this1 = a.c2;
	this1.x = v_x2;
	this1.y = v_y2;
	this1.z = v_z2;
	return a;
};
Mat3.mulEqScalar = function(a,f) {
	var m = a;
	var v_x = m.c0.x * f;
	var v_y = m.c0.y * f;
	var v_z = m.c0.z * f;
	var v_x1 = m.c1.x * f;
	var v_y1 = m.c1.y * f;
	var v_z1 = m.c1.z * f;
	var v_x2 = m.c2.x * f;
	var v_y2 = m.c2.y * f;
	var v_z2 = m.c2.z * f;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	this1.z = v_z;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	this1.z = v_z1;
	var this1 = a.c2;
	this1.x = v_x2;
	this1.y = v_y2;
	this1.z = v_z2;
	return a;
};
Mat3.divEq = function(a,b) {
	var m = b;
	var n_c0_x = 1.0 / m.c0.x;
	var n_c0_y = 1.0 / m.c0.y;
	var n_c0_z = 1.0 / m.c0.z;
	var n_c1_x = 1.0 / m.c1.x;
	var n_c1_y = 1.0 / m.c1.y;
	var n_c1_z = 1.0 / m.c1.z;
	var n_c2_x = 1.0 / m.c2.x;
	var n_c2_y = 1.0 / m.c2.y;
	var n_c2_z = 1.0 / m.c2.z;
	var v_x = a.c0.x * n_c0_x;
	var v_y = a.c0.y * n_c0_y;
	var v_z = a.c0.z * n_c0_z;
	var v_x1 = a.c1.x * n_c1_x;
	var v_y1 = a.c1.y * n_c1_y;
	var v_z1 = a.c1.z * n_c1_z;
	var v_x2 = a.c2.x * n_c2_x;
	var v_y2 = a.c2.y * n_c2_y;
	var v_z2 = a.c2.z * n_c2_z;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	this1.z = v_z;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	this1.z = v_z1;
	var this1 = a.c2;
	this1.x = v_x2;
	this1.y = v_y2;
	this1.z = v_z2;
	return a;
};
Mat3.divEqScalar = function(a,f) {
	var m = a;
	var v_x = m.c0.x / f;
	var v_y = m.c0.y / f;
	var v_z = m.c0.z / f;
	var v_x1 = m.c1.x / f;
	var v_y1 = m.c1.y / f;
	var v_z1 = m.c1.z / f;
	var v_x2 = m.c2.x / f;
	var v_y2 = m.c2.y / f;
	var v_z2 = m.c2.z / f;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	this1.z = v_z;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	this1.z = v_z1;
	var this1 = a.c2;
	this1.x = v_x2;
	this1.y = v_y2;
	this1.z = v_z2;
	return a;
};
Mat3.addEq = function(a,b) {
	var m = a;
	var n = b;
	var v_x = m.c0.x + n.c0.x;
	var v_y = m.c0.y + n.c0.y;
	var v_z = m.c0.z + n.c0.z;
	var v_x1 = m.c1.x + n.c1.x;
	var v_y1 = m.c1.y + n.c1.y;
	var v_z1 = m.c1.z + n.c1.z;
	var v_x2 = m.c2.x + n.c2.x;
	var v_y2 = m.c2.y + n.c2.y;
	var v_z2 = m.c2.z + n.c2.z;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	this1.z = v_z;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	this1.z = v_z1;
	var this1 = a.c2;
	this1.x = v_x2;
	this1.y = v_y2;
	this1.z = v_z2;
	return a;
};
Mat3.addEqScalar = function(a,f) {
	var m = a;
	var v_x = m.c0.x + f;
	var v_y = m.c0.y + f;
	var v_z = m.c0.z + f;
	var v_x1 = m.c1.x + f;
	var v_y1 = m.c1.y + f;
	var v_z1 = m.c1.z + f;
	var v_x2 = m.c2.x + f;
	var v_y2 = m.c2.y + f;
	var v_z2 = m.c2.z + f;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	this1.z = v_z;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	this1.z = v_z1;
	var this1 = a.c2;
	this1.x = v_x2;
	this1.y = v_y2;
	this1.z = v_z2;
	return a;
};
Mat3.subEq = function(a,b) {
	var m = a;
	var n = b;
	var v_x = m.c0.x - n.c0.x;
	var v_y = m.c0.y - n.c0.y;
	var v_z = m.c0.z - n.c0.z;
	var v_x1 = m.c1.x - n.c1.x;
	var v_y1 = m.c1.y - n.c1.y;
	var v_z1 = m.c1.z - n.c1.z;
	var v_x2 = m.c2.x - n.c2.x;
	var v_y2 = m.c2.y - n.c2.y;
	var v_z2 = m.c2.z - n.c2.z;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	this1.z = v_z;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	this1.z = v_z1;
	var this1 = a.c2;
	this1.x = v_x2;
	this1.y = v_y2;
	this1.z = v_z2;
	return a;
};
Mat3.subEqScalar = function(a,f) {
	var m = a;
	var v_x = m.c0.x - f;
	var v_y = m.c0.y - f;
	var v_z = m.c0.z - f;
	var v_x1 = m.c1.x - f;
	var v_y1 = m.c1.y - f;
	var v_z1 = m.c1.z - f;
	var v_x2 = m.c2.x - f;
	var v_y2 = m.c2.y - f;
	var v_z2 = m.c2.z - f;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	this1.z = v_z;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	this1.z = v_z1;
	var this1 = a.c2;
	this1.x = v_x2;
	this1.y = v_y2;
	this1.z = v_z2;
	return a;
};
Mat3.add = function(m,n) {
	var m1 = m;
	var n1 = n;
	var this1 = new Mat3Data(m1.c0.x + n1.c0.x,m1.c0.y + n1.c0.y,m1.c0.z + n1.c0.z,m1.c1.x + n1.c1.x,m1.c1.y + n1.c1.y,m1.c1.z + n1.c1.z,m1.c2.x + n1.c2.x,m1.c2.y + n1.c2.y,m1.c2.z + n1.c2.z);
	return this1;
};
Mat3.addScalar = function(m,f) {
	var m1 = m;
	var this1 = new Mat3Data(m1.c0.x + f,m1.c0.y + f,m1.c0.z + f,m1.c1.x + f,m1.c1.y + f,m1.c1.z + f,m1.c2.x + f,m1.c2.y + f,m1.c2.z + f);
	return this1;
};
Mat3.sub = function(m,n) {
	var m1 = m;
	var n1 = n;
	var this1 = new Mat3Data(m1.c0.x - n1.c0.x,m1.c0.y - n1.c0.y,m1.c0.z - n1.c0.z,m1.c1.x - n1.c1.x,m1.c1.y - n1.c1.y,m1.c1.z - n1.c1.z,m1.c2.x - n1.c2.x,m1.c2.y - n1.c2.y,m1.c2.z - n1.c2.z);
	return this1;
};
Mat3.subScalar = function(m,f) {
	var m1 = m;
	var this1 = new Mat3Data(m1.c0.x - f,m1.c0.y - f,m1.c0.z - f,m1.c1.x - f,m1.c1.y - f,m1.c1.z - f,m1.c2.x - f,m1.c2.y - f,m1.c2.z - f);
	return this1;
};
Mat3.subScalarInv = function(f,m) {
	var m1 = m;
	var this1 = new Mat3Data(f - m1.c0.x,f - m1.c0.y,f - m1.c0.z,f - m1.c1.x,f - m1.c1.y,f - m1.c1.z,f - m1.c2.x,f - m1.c2.y,f - m1.c2.z);
	return this1;
};
Mat3.mul = function(m,n) {
	var m1 = m;
	var n1 = n;
	var this1 = new Mat3Data(m1.c0.x * n1.c0.x + m1.c1.x * n1.c0.y + m1.c2.x * n1.c0.z,m1.c0.y * n1.c0.x + m1.c1.y * n1.c0.y + m1.c2.y * n1.c0.z,m1.c0.z * n1.c0.x + m1.c1.z * n1.c0.y + m1.c2.z * n1.c0.z,m1.c0.x * n1.c1.x + m1.c1.x * n1.c1.y + m1.c2.x * n1.c1.z,m1.c0.y * n1.c1.x + m1.c1.y * n1.c1.y + m1.c2.y * n1.c1.z,m1.c0.z * n1.c1.x + m1.c1.z * n1.c1.y + m1.c2.z * n1.c1.z,m1.c0.x * n1.c2.x + m1.c1.x * n1.c2.y + m1.c2.x * n1.c2.z,m1.c0.y * n1.c2.x + m1.c1.y * n1.c2.y + m1.c2.y * n1.c2.z,m1.c0.z * n1.c2.x + m1.c1.z * n1.c2.y + m1.c2.z * n1.c2.z);
	return this1;
};
Mat3.postMulVec3 = function(m,v) {
	var m1 = m;
	var this1 = new Vec3Data(m1.c0.x * v.x + m1.c1.x * v.y + m1.c2.x * v.z,m1.c0.y * v.x + m1.c1.y * v.y + m1.c2.y * v.z,m1.c0.z * v.x + m1.c1.z * v.y + m1.c2.z * v.z);
	return this1;
};
Mat3.preMulVec3 = function(v,m) {
	var m1 = m;
	var b = m1.c0;
	var b1 = m1.c1;
	var b2 = m1.c2;
	var this1 = new Vec3Data(v.x * b.x + v.y * b.y + v.z * b.z,v.x * b1.x + v.y * b1.y + v.z * b1.z,v.x * b2.x + v.y * b2.y + v.z * b2.z);
	return this1;
};
Mat3.mulScalar = function(m,f) {
	var m1 = m;
	var this1 = new Mat3Data(m1.c0.x * f,m1.c0.y * f,m1.c0.z * f,m1.c1.x * f,m1.c1.y * f,m1.c1.z * f,m1.c2.x * f,m1.c2.y * f,m1.c2.z * f);
	return this1;
};
Mat3.div = function(m,n) {
	var m1 = n;
	var n_c0_x = 1.0 / m1.c0.x;
	var n_c0_y = 1.0 / m1.c0.y;
	var n_c0_z = 1.0 / m1.c0.z;
	var n_c1_x = 1.0 / m1.c1.x;
	var n_c1_y = 1.0 / m1.c1.y;
	var n_c1_z = 1.0 / m1.c1.z;
	var n_c2_x = 1.0 / m1.c2.x;
	var n_c2_y = 1.0 / m1.c2.y;
	var n_c2_z = 1.0 / m1.c2.z;
	var this1 = new Mat3Data(m.c0.x * n_c0_x,m.c0.y * n_c0_y,m.c0.z * n_c0_z,m.c1.x * n_c1_x,m.c1.y * n_c1_y,m.c1.z * n_c1_z,m.c2.x * n_c2_x,m.c2.y * n_c2_y,m.c2.z * n_c2_z);
	return this1;
};
Mat3.divScalar = function(m,f) {
	var m1 = m;
	var this1 = new Mat3Data(m1.c0.x / f,m1.c0.y / f,m1.c0.z / f,m1.c1.x / f,m1.c1.y / f,m1.c1.z / f,m1.c2.x / f,m1.c2.y / f,m1.c2.z / f);
	return this1;
};
Mat3.divScalarInv = function(f,m) {
	var m1 = m;
	var this1 = new Mat3Data(f / m1.c0.x,f / m1.c0.y,f / m1.c0.z,f / m1.c1.x,f / m1.c1.y,f / m1.c1.z,f / m1.c2.x,f / m1.c2.y,f / m1.c2.z);
	return this1;
};
Mat3.equal = function(m,n) {
	var m1 = m;
	var n1 = n;
	var tmp;
	var a = m1.c0;
	var b = n1.c0;
	if(a.x == b.x && a.y == b.y && a.z == b.z) {
		var a = m1.c1;
		var b = n1.c1;
		tmp = a.x == b.x && a.y == b.y && a.z == b.z;
	} else {
		tmp = false;
	}
	if(tmp) {
		var a = m1.c2;
		var b = n1.c2;
		if(a.x == b.x && a.y == b.y) {
			return a.z == b.z;
		} else {
			return false;
		}
	} else {
		return false;
	}
};
Mat3.notEqual = function(m,n) {
	var m1 = m;
	var n1 = n;
	var tmp;
	var tmp1;
	var a = m1.c0;
	var b = n1.c0;
	if(a.x == b.x && a.y == b.y && a.z == b.z) {
		var a = m1.c1;
		var b = n1.c1;
		tmp1 = a.x == b.x && a.y == b.y && a.z == b.z;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		var a = m1.c2;
		var b = n1.c2;
		tmp = a.x == b.x && a.y == b.y && a.z == b.z;
	} else {
		tmp = false;
	}
	return !tmp;
};
var Mat3Data = function(a00,a01,a02,a10,a11,a12,a20,a21,a22) {
	var this1 = new Vec3Data(a00,a01,a02);
	this.c0 = this1;
	var this1 = new Vec3Data(a10,a11,a12);
	this.c1 = this1;
	var this1 = new Vec3Data(a20,a21,a22);
	this.c2 = this1;
};
var Mat4 = {};
Mat4._new = function(a00,a01,a02,a03,a10,a11,a12,a13,a20,a21,a22,a23,a30,a31,a32,a33) {
	var this1 = new Mat4Data(a00,a01,a02,a03,a10,a11,a12,a13,a20,a21,a22,a23,a30,a31,a32,a33);
	return this1;
};
Mat4.copyFrom = function(this1,v) {
	var v1 = v;
	var this2 = this1.c0;
	var v = v1.c0;
	this2.x = v.x;
	this2.y = v.y;
	this2.z = v.z;
	this2.w = v.w;
	var this2 = this1.c1;
	var v = v1.c1;
	this2.x = v.x;
	this2.y = v.y;
	this2.z = v.z;
	this2.w = v.w;
	var this2 = this1.c2;
	var v = v1.c2;
	this2.x = v.x;
	this2.y = v.y;
	this2.z = v.z;
	this2.w = v.w;
	var this2 = this1.c3;
	var v = v1.c3;
	this2.x = v.x;
	this2.y = v.y;
	this2.z = v.z;
	this2.w = v.w;
	return this1;
};
Mat4.clone = function(this1) {
	var this2 = new Mat4Data(this1.c0.x,this1.c0.y,this1.c0.z,this1.c0.w,this1.c1.x,this1.c1.y,this1.c1.z,this1.c1.w,this1.c2.x,this1.c2.y,this1.c2.z,this1.c2.w,this1.c3.x,this1.c3.y,this1.c3.z,this1.c3.w);
	return this2;
};
Mat4.matrixCompMult = function(this1,n) {
	var m = this1;
	var n1 = n;
	var this1 = new Mat4Data(m.c0.x * n1.c0.x,m.c0.y * n1.c0.y,m.c0.z * n1.c0.z,m.c0.w * n1.c0.w,m.c1.x * n1.c1.x,m.c1.y * n1.c1.y,m.c1.z * n1.c1.z,m.c1.w * n1.c1.w,m.c2.x * n1.c2.x,m.c2.y * n1.c2.y,m.c2.z * n1.c2.z,m.c2.w * n1.c2.w,m.c3.x * n1.c3.x,m.c3.y * n1.c3.y,m.c3.z * n1.c3.z,m.c3.w * n1.c3.w);
	return this1;
};
Mat4.transpose = function(this1) {
	var m = this1;
	var this1 = new Mat4Data(m.c0.x,m.c1.x,m.c2.x,m.c3.x,m.c0.y,m.c1.y,m.c2.y,m.c3.y,m.c0.z,m.c1.z,m.c2.z,m.c3.z,m.c0.w,m.c1.w,m.c2.w,m.c3.w);
	return this1;
};
Mat4.determinant = function(this1) {
	var m = this1;
	var b0 = m.c0.x * m.c1.y - m.c0.y * m.c1.x;
	var b1 = m.c0.x * m.c1.z - m.c0.z * m.c1.x;
	var b2 = m.c0.y * m.c1.z - m.c0.z * m.c1.y;
	var b3 = m.c2.x * m.c3.y - m.c2.y * m.c3.x;
	var b4 = m.c2.x * m.c3.z - m.c2.z * m.c3.x;
	var b5 = m.c2.y * m.c3.z - m.c2.z * m.c3.y;
	var b6 = m.c0.x * b5 - m.c0.y * b4 + m.c0.z * b3;
	var b7 = m.c1.x * b5 - m.c1.y * b4 + m.c1.z * b3;
	var b8 = m.c2.x * b2 - m.c2.y * b1 + m.c2.z * b0;
	var b9 = m.c3.x * b2 - m.c3.y * b1 + m.c3.z * b0;
	return m.c1.w * b6 - m.c0.w * b7 + m.c3.w * b8 - m.c2.w * b9;
};
Mat4.inverse = function(this1) {
	var m = this1;
	var b00 = m.c0.x * m.c1.y - m.c0.y * m.c1.x;
	var b01 = m.c0.x * m.c1.z - m.c0.z * m.c1.x;
	var b02 = m.c0.x * m.c1.w - m.c0.w * m.c1.x;
	var b03 = m.c0.y * m.c1.z - m.c0.z * m.c1.y;
	var b04 = m.c0.y * m.c1.w - m.c0.w * m.c1.y;
	var b05 = m.c0.z * m.c1.w - m.c0.w * m.c1.z;
	var b06 = m.c2.x * m.c3.y - m.c2.y * m.c3.x;
	var b07 = m.c2.x * m.c3.z - m.c2.z * m.c3.x;
	var b08 = m.c2.x * m.c3.w - m.c2.w * m.c3.x;
	var b09 = m.c2.y * m.c3.z - m.c2.z * m.c3.y;
	var b10 = m.c2.y * m.c3.w - m.c2.w * m.c3.y;
	var b11 = m.c2.z * m.c3.w - m.c2.w * m.c3.z;
	var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
	var f = 1.0 / det;
	var this1 = new Mat4Data((m.c1.y * b11 - m.c1.z * b10 + m.c1.w * b09) * f,(m.c0.z * b10 - m.c0.y * b11 - m.c0.w * b09) * f,(m.c3.y * b05 - m.c3.z * b04 + m.c3.w * b03) * f,(m.c2.z * b04 - m.c2.y * b05 - m.c2.w * b03) * f,(m.c1.z * b08 - m.c1.x * b11 - m.c1.w * b07) * f,(m.c0.x * b11 - m.c0.z * b08 + m.c0.w * b07) * f,(m.c3.z * b02 - m.c3.x * b05 - m.c3.w * b01) * f,(m.c2.x * b05 - m.c2.z * b02 + m.c2.w * b01) * f,(m.c1.x * b10 - m.c1.y * b08 + m.c1.w * b06) * f,(m.c0.y * b08 - m.c0.x * b10 - m.c0.w * b06) * f,(m.c3.x * b04 - m.c3.y * b02 + m.c3.w * b00) * f,(m.c2.y * b02 - m.c2.x * b04 - m.c2.w * b00) * f,(m.c1.y * b07 - m.c1.x * b09 - m.c1.z * b06) * f,(m.c0.x * b09 - m.c0.y * b07 + m.c0.z * b06) * f,(m.c3.y * b01 - m.c3.x * b03 - m.c3.z * b00) * f,(m.c2.x * b03 - m.c2.y * b01 + m.c2.z * b00) * f);
	return this1;
};
Mat4.adjoint = function(this1) {
	var m = this1;
	var b00 = m.c0.x * m.c1.y - m.c0.y * m.c1.x;
	var b01 = m.c0.x * m.c1.z - m.c0.z * m.c1.x;
	var b02 = m.c0.x * m.c1.w - m.c0.w * m.c1.x;
	var b03 = m.c0.y * m.c1.z - m.c0.z * m.c1.y;
	var b04 = m.c0.y * m.c1.w - m.c0.w * m.c1.y;
	var b05 = m.c0.z * m.c1.w - m.c0.w * m.c1.z;
	var b06 = m.c2.x * m.c3.y - m.c2.y * m.c3.x;
	var b07 = m.c2.x * m.c3.z - m.c2.z * m.c3.x;
	var b08 = m.c2.x * m.c3.w - m.c2.w * m.c3.x;
	var b09 = m.c2.y * m.c3.z - m.c2.z * m.c3.y;
	var b10 = m.c2.y * m.c3.w - m.c2.w * m.c3.y;
	var b11 = m.c2.z * m.c3.w - m.c2.w * m.c3.z;
	var this1 = new Mat4Data(m.c1.y * b11 - m.c1.z * b10 + m.c1.w * b09,m.c0.z * b10 - m.c0.y * b11 - m.c0.w * b09,m.c3.y * b05 - m.c3.z * b04 + m.c3.w * b03,m.c2.z * b04 - m.c2.y * b05 - m.c2.w * b03,m.c1.z * b08 - m.c1.x * b11 - m.c1.w * b07,m.c0.x * b11 - m.c0.z * b08 + m.c0.w * b07,m.c3.z * b02 - m.c3.x * b05 - m.c3.w * b01,m.c2.x * b05 - m.c2.z * b02 + m.c2.w * b01,m.c1.x * b10 - m.c1.y * b08 + m.c1.w * b06,m.c0.y * b08 - m.c0.x * b10 - m.c0.w * b06,m.c3.x * b04 - m.c3.y * b02 + m.c3.w * b00,m.c2.y * b02 - m.c2.x * b04 - m.c2.w * b00,m.c1.y * b07 - m.c1.x * b09 - m.c1.z * b06,m.c0.x * b09 - m.c0.y * b07 + m.c0.z * b06,m.c3.y * b01 - m.c3.x * b03 - m.c3.z * b00,m.c2.x * b03 - m.c2.y * b01 + m.c2.z * b00);
	return this1;
};
Mat4.toString = function(this1) {
	return "mat4(" + ("" + this1.c0.x + ", " + this1.c0.y + ", " + this1.c0.z + ", " + this1.c0.w + ", ") + ("" + this1.c1.x + ", " + this1.c1.y + ", " + this1.c1.z + ", " + this1.c1.w + ", ") + ("" + this1.c2.x + ", " + this1.c2.y + ", " + this1.c2.z + ", " + this1.c2.w + ", ") + ("" + this1.c3.x + ", " + this1.c3.y + ", " + this1.c3.z + ", " + this1.c3.w) + ")";
};
Mat4.arrayRead = function(this1,i) {
	switch(i) {
	case 0:
		var this2 = this1.c0;
		var this3 = new Vec4Data(this2.x,this2.y,this2.z,this2.w);
		return this3;
	case 1:
		var this2 = this1.c1;
		var this3 = new Vec4Data(this2.x,this2.y,this2.z,this2.w);
		return this3;
	case 2:
		var this2 = this1.c2;
		var this3 = new Vec4Data(this2.x,this2.y,this2.z,this2.w);
		return this3;
	case 3:
		var this2 = this1.c3;
		var this1 = new Vec4Data(this2.x,this2.y,this2.z,this2.w);
		return this1;
	default:
		return null;
	}
};
Mat4.arrayWrite = function(this1,i,v) {
	switch(i) {
	case 0:
		var this2 = this1.c0;
		this2.x = v.x;
		this2.y = v.y;
		this2.z = v.z;
		this2.w = v.w;
		return this2;
	case 1:
		var this2 = this1.c1;
		this2.x = v.x;
		this2.y = v.y;
		this2.z = v.z;
		this2.w = v.w;
		return this2;
	case 2:
		var this2 = this1.c2;
		this2.x = v.x;
		this2.y = v.y;
		this2.z = v.z;
		this2.w = v.w;
		return this2;
	case 3:
		var this2 = this1.c3;
		this2.x = v.x;
		this2.y = v.y;
		this2.z = v.z;
		this2.w = v.w;
		return this2;
	default:
		return null;
	}
};
Mat4.neg = function(m) {
	var m1 = m;
	var this1 = new Mat4Data(-m1.c0.x,-m1.c0.y,-m1.c0.z,-m1.c0.w,-m1.c1.x,-m1.c1.y,-m1.c1.z,-m1.c1.w,-m1.c2.x,-m1.c2.y,-m1.c2.z,-m1.c2.w,-m1.c3.x,-m1.c3.y,-m1.c3.z,-m1.c3.w);
	return this1;
};
Mat4.prefixIncrement = function(m) {
	var _m = m;
	var a = _m.c0;
	a.x += 1;
	a.y += 1;
	a.z += 1;
	a.w += 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var this_w = a.w;
	var a = _m.c1;
	a.x += 1;
	a.y += 1;
	a.z += 1;
	a.w += 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var this_w = a.w;
	var a = _m.c2;
	a.x += 1;
	a.y += 1;
	a.z += 1;
	a.w += 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var this_w = a.w;
	var a = _m.c3;
	a.x += 1;
	a.y += 1;
	a.z += 1;
	a.w += 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var this_w = a.w;
	var this1 = new Mat4Data(m.c0.x,m.c0.y,m.c0.z,m.c0.w,m.c1.x,m.c1.y,m.c1.z,m.c1.w,m.c2.x,m.c2.y,m.c2.z,m.c2.w,m.c3.x,m.c3.y,m.c3.z,m.c3.w);
	return this1;
};
Mat4.prefixDecrement = function(m) {
	var _m = m;
	var a = _m.c0;
	a.x -= 1;
	a.y -= 1;
	a.z -= 1;
	a.w -= 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var this_w = a.w;
	var a = _m.c1;
	a.x -= 1;
	a.y -= 1;
	a.z -= 1;
	a.w -= 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var this_w = a.w;
	var a = _m.c2;
	a.x -= 1;
	a.y -= 1;
	a.z -= 1;
	a.w -= 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var this_w = a.w;
	var a = _m.c3;
	a.x -= 1;
	a.y -= 1;
	a.z -= 1;
	a.w -= 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var this_w = a.w;
	var this1 = new Mat4Data(m.c0.x,m.c0.y,m.c0.z,m.c0.w,m.c1.x,m.c1.y,m.c1.z,m.c1.w,m.c2.x,m.c2.y,m.c2.z,m.c2.w,m.c3.x,m.c3.y,m.c3.z,m.c3.w);
	return this1;
};
Mat4.postfixIncrement = function(m) {
	var this1 = new Mat4Data(m.c0.x,m.c0.y,m.c0.z,m.c0.w,m.c1.x,m.c1.y,m.c1.z,m.c1.w,m.c2.x,m.c2.y,m.c2.z,m.c2.w,m.c3.x,m.c3.y,m.c3.z,m.c3.w);
	var ret = this1;
	var m1 = m;
	var a = m1.c0;
	a.x += 1;
	a.y += 1;
	a.z += 1;
	a.w += 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var this_w = a.w;
	var a = m1.c1;
	a.x += 1;
	a.y += 1;
	a.z += 1;
	a.w += 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var this_w = a.w;
	var a = m1.c2;
	a.x += 1;
	a.y += 1;
	a.z += 1;
	a.w += 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var this_w = a.w;
	var a = m1.c3;
	a.x += 1;
	a.y += 1;
	a.z += 1;
	a.w += 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var this_w = a.w;
	return ret;
};
Mat4.postfixDecrement = function(m) {
	var this1 = new Mat4Data(m.c0.x,m.c0.y,m.c0.z,m.c0.w,m.c1.x,m.c1.y,m.c1.z,m.c1.w,m.c2.x,m.c2.y,m.c2.z,m.c2.w,m.c3.x,m.c3.y,m.c3.z,m.c3.w);
	var ret = this1;
	var m1 = m;
	var a = m1.c0;
	a.x -= 1;
	a.y -= 1;
	a.z -= 1;
	a.w -= 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var this_w = a.w;
	var a = m1.c1;
	a.x -= 1;
	a.y -= 1;
	a.z -= 1;
	a.w -= 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var this_w = a.w;
	var a = m1.c2;
	a.x -= 1;
	a.y -= 1;
	a.z -= 1;
	a.w -= 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var this_w = a.w;
	var a = m1.c3;
	a.x -= 1;
	a.y -= 1;
	a.z -= 1;
	a.w -= 1;
	var this_x = a.x;
	var this_y = a.y;
	var this_z = a.z;
	var this_w = a.w;
	return ret;
};
Mat4.mulEq = function(a,b) {
	var m = a;
	var n = b;
	var v_x = m.c0.x * n.c0.x + m.c1.x * n.c0.y + m.c2.x * n.c0.z + m.c3.x * n.c0.w;
	var v_y = m.c0.y * n.c0.x + m.c1.y * n.c0.y + m.c2.y * n.c0.z + m.c3.y * n.c0.w;
	var v_z = m.c0.z * n.c0.x + m.c1.z * n.c0.y + m.c2.z * n.c0.z + m.c3.z * n.c0.w;
	var v_w = m.c0.w * n.c0.x + m.c1.w * n.c0.y + m.c2.w * n.c0.z + m.c3.w * n.c0.w;
	var v_x1 = m.c0.x * n.c1.x + m.c1.x * n.c1.y + m.c2.x * n.c1.z + m.c3.x * n.c1.w;
	var v_y1 = m.c0.y * n.c1.x + m.c1.y * n.c1.y + m.c2.y * n.c1.z + m.c3.y * n.c1.w;
	var v_z1 = m.c0.z * n.c1.x + m.c1.z * n.c1.y + m.c2.z * n.c1.z + m.c3.z * n.c1.w;
	var v_w1 = m.c0.w * n.c1.x + m.c1.w * n.c1.y + m.c2.w * n.c1.z + m.c3.w * n.c1.w;
	var v_x2 = m.c0.x * n.c2.x + m.c1.x * n.c2.y + m.c2.x * n.c2.z + m.c3.x * n.c2.w;
	var v_y2 = m.c0.y * n.c2.x + m.c1.y * n.c2.y + m.c2.y * n.c2.z + m.c3.y * n.c2.w;
	var v_z2 = m.c0.z * n.c2.x + m.c1.z * n.c2.y + m.c2.z * n.c2.z + m.c3.z * n.c2.w;
	var v_w2 = m.c0.w * n.c2.x + m.c1.w * n.c2.y + m.c2.w * n.c2.z + m.c3.w * n.c2.w;
	var v_x3 = m.c0.x * n.c3.x + m.c1.x * n.c3.y + m.c2.x * n.c3.z + m.c3.x * n.c3.w;
	var v_y3 = m.c0.y * n.c3.x + m.c1.y * n.c3.y + m.c2.y * n.c3.z + m.c3.y * n.c3.w;
	var v_z3 = m.c0.z * n.c3.x + m.c1.z * n.c3.y + m.c2.z * n.c3.z + m.c3.z * n.c3.w;
	var v_w3 = m.c0.w * n.c3.x + m.c1.w * n.c3.y + m.c2.w * n.c3.z + m.c3.w * n.c3.w;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	this1.z = v_z;
	this1.w = v_w;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	this1.z = v_z1;
	this1.w = v_w1;
	var this1 = a.c2;
	this1.x = v_x2;
	this1.y = v_y2;
	this1.z = v_z2;
	this1.w = v_w2;
	var this1 = a.c3;
	this1.x = v_x3;
	this1.y = v_y3;
	this1.z = v_z3;
	this1.w = v_w3;
	return a;
};
Mat4.mulEqScalar = function(a,f) {
	var m = a;
	var v_x = m.c0.x * f;
	var v_y = m.c0.y * f;
	var v_z = m.c0.z * f;
	var v_w = m.c0.w * f;
	var v_x1 = m.c1.x * f;
	var v_y1 = m.c1.y * f;
	var v_z1 = m.c1.z * f;
	var v_w1 = m.c1.w * f;
	var v_x2 = m.c2.x * f;
	var v_y2 = m.c2.y * f;
	var v_z2 = m.c2.z * f;
	var v_w2 = m.c2.w * f;
	var v_x3 = m.c3.x * f;
	var v_y3 = m.c3.y * f;
	var v_z3 = m.c3.z * f;
	var v_w3 = m.c3.w * f;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	this1.z = v_z;
	this1.w = v_w;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	this1.z = v_z1;
	this1.w = v_w1;
	var this1 = a.c2;
	this1.x = v_x2;
	this1.y = v_y2;
	this1.z = v_z2;
	this1.w = v_w2;
	var this1 = a.c3;
	this1.x = v_x3;
	this1.y = v_y3;
	this1.z = v_z3;
	this1.w = v_w3;
	return a;
};
Mat4.divEq = function(a,b) {
	var m = b;
	var n_c0_x = 1.0 / m.c0.x;
	var n_c0_y = 1.0 / m.c0.y;
	var n_c0_z = 1.0 / m.c0.z;
	var n_c0_w = 1.0 / m.c0.w;
	var n_c1_x = 1.0 / m.c1.x;
	var n_c1_y = 1.0 / m.c1.y;
	var n_c1_z = 1.0 / m.c1.z;
	var n_c1_w = 1.0 / m.c1.w;
	var n_c2_x = 1.0 / m.c2.x;
	var n_c2_y = 1.0 / m.c2.y;
	var n_c2_z = 1.0 / m.c2.z;
	var n_c2_w = 1.0 / m.c2.w;
	var n_c3_x = 1.0 / m.c3.x;
	var n_c3_y = 1.0 / m.c3.y;
	var n_c3_z = 1.0 / m.c3.z;
	var n_c3_w = 1.0 / m.c3.w;
	var m = a;
	var v_x = m.c0.x * n_c0_x;
	var v_y = m.c0.y * n_c0_y;
	var v_z = m.c0.z * n_c0_z;
	var v_w = m.c0.w * n_c0_w;
	var v_x1 = m.c1.x * n_c1_x;
	var v_y1 = m.c1.y * n_c1_y;
	var v_z1 = m.c1.z * n_c1_z;
	var v_w1 = m.c1.w * n_c1_w;
	var v_x2 = m.c2.x * n_c2_x;
	var v_y2 = m.c2.y * n_c2_y;
	var v_z2 = m.c2.z * n_c2_z;
	var v_w2 = m.c2.w * n_c2_w;
	var v_x3 = m.c3.x * n_c3_x;
	var v_y3 = m.c3.y * n_c3_y;
	var v_z3 = m.c3.z * n_c3_z;
	var v_w3 = m.c3.w * n_c3_w;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	this1.z = v_z;
	this1.w = v_w;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	this1.z = v_z1;
	this1.w = v_w1;
	var this1 = a.c2;
	this1.x = v_x2;
	this1.y = v_y2;
	this1.z = v_z2;
	this1.w = v_w2;
	var this1 = a.c3;
	this1.x = v_x3;
	this1.y = v_y3;
	this1.z = v_z3;
	this1.w = v_w3;
	return a;
};
Mat4.divEqScalar = function(a,f) {
	var m = a;
	var v_x = m.c0.x / f;
	var v_y = m.c0.y / f;
	var v_z = m.c0.z / f;
	var v_w = m.c0.w / f;
	var v_x1 = m.c1.x / f;
	var v_y1 = m.c1.y / f;
	var v_z1 = m.c1.z / f;
	var v_w1 = m.c1.w / f;
	var v_x2 = m.c2.x / f;
	var v_y2 = m.c2.y / f;
	var v_z2 = m.c2.z / f;
	var v_w2 = m.c2.w / f;
	var v_x3 = m.c3.x / f;
	var v_y3 = m.c3.y / f;
	var v_z3 = m.c3.z / f;
	var v_w3 = m.c3.w / f;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	this1.z = v_z;
	this1.w = v_w;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	this1.z = v_z1;
	this1.w = v_w1;
	var this1 = a.c2;
	this1.x = v_x2;
	this1.y = v_y2;
	this1.z = v_z2;
	this1.w = v_w2;
	var this1 = a.c3;
	this1.x = v_x3;
	this1.y = v_y3;
	this1.z = v_z3;
	this1.w = v_w3;
	return a;
};
Mat4.addEq = function(a,b) {
	var m = a;
	var n = b;
	var v_x = m.c0.x + n.c0.x;
	var v_y = m.c0.y + n.c0.y;
	var v_z = m.c0.z + n.c0.z;
	var v_w = m.c0.w + n.c0.w;
	var v_x1 = m.c1.x + n.c1.x;
	var v_y1 = m.c1.y + n.c1.y;
	var v_z1 = m.c1.z + n.c1.z;
	var v_w1 = m.c1.w + n.c1.w;
	var v_x2 = m.c2.x + n.c2.x;
	var v_y2 = m.c2.y + n.c2.y;
	var v_z2 = m.c2.z + n.c2.z;
	var v_w2 = m.c2.w + n.c2.w;
	var v_x3 = m.c3.x + n.c3.x;
	var v_y3 = m.c3.y + n.c3.y;
	var v_z3 = m.c3.z + n.c3.z;
	var v_w3 = m.c3.w + n.c3.w;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	this1.z = v_z;
	this1.w = v_w;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	this1.z = v_z1;
	this1.w = v_w1;
	var this1 = a.c2;
	this1.x = v_x2;
	this1.y = v_y2;
	this1.z = v_z2;
	this1.w = v_w2;
	var this1 = a.c3;
	this1.x = v_x3;
	this1.y = v_y3;
	this1.z = v_z3;
	this1.w = v_w3;
	return a;
};
Mat4.addEqScalar = function(a,f) {
	var m = a;
	var v_x = m.c0.x + f;
	var v_y = m.c0.y + f;
	var v_z = m.c0.z + f;
	var v_w = m.c0.w + f;
	var v_x1 = m.c1.x + f;
	var v_y1 = m.c1.y + f;
	var v_z1 = m.c1.z + f;
	var v_w1 = m.c1.w + f;
	var v_x2 = m.c2.x + f;
	var v_y2 = m.c2.y + f;
	var v_z2 = m.c2.z + f;
	var v_w2 = m.c2.w + f;
	var v_x3 = m.c3.x + f;
	var v_y3 = m.c3.y + f;
	var v_z3 = m.c3.z + f;
	var v_w3 = m.c3.w + f;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	this1.z = v_z;
	this1.w = v_w;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	this1.z = v_z1;
	this1.w = v_w1;
	var this1 = a.c2;
	this1.x = v_x2;
	this1.y = v_y2;
	this1.z = v_z2;
	this1.w = v_w2;
	var this1 = a.c3;
	this1.x = v_x3;
	this1.y = v_y3;
	this1.z = v_z3;
	this1.w = v_w3;
	return a;
};
Mat4.subEq = function(a,b) {
	var m = a;
	var n = b;
	var v_x = m.c0.x - n.c0.x;
	var v_y = m.c0.y - n.c0.y;
	var v_z = m.c0.z - n.c0.z;
	var v_w = m.c0.w - n.c0.w;
	var v_x1 = m.c1.x - n.c1.x;
	var v_y1 = m.c1.y - n.c1.y;
	var v_z1 = m.c1.z - n.c1.z;
	var v_w1 = m.c1.w - n.c1.w;
	var v_x2 = m.c2.x - n.c2.x;
	var v_y2 = m.c2.y - n.c2.y;
	var v_z2 = m.c2.z - n.c2.z;
	var v_w2 = m.c2.w - n.c2.w;
	var v_x3 = m.c3.x - n.c3.x;
	var v_y3 = m.c3.y - n.c3.y;
	var v_z3 = m.c3.z - n.c3.z;
	var v_w3 = m.c3.w - n.c3.w;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	this1.z = v_z;
	this1.w = v_w;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	this1.z = v_z1;
	this1.w = v_w1;
	var this1 = a.c2;
	this1.x = v_x2;
	this1.y = v_y2;
	this1.z = v_z2;
	this1.w = v_w2;
	var this1 = a.c3;
	this1.x = v_x3;
	this1.y = v_y3;
	this1.z = v_z3;
	this1.w = v_w3;
	return a;
};
Mat4.subEqScalar = function(a,f) {
	var m = a;
	var v_x = m.c0.x - f;
	var v_y = m.c0.y - f;
	var v_z = m.c0.z - f;
	var v_w = m.c0.w - f;
	var v_x1 = m.c1.x - f;
	var v_y1 = m.c1.y - f;
	var v_z1 = m.c1.z - f;
	var v_w1 = m.c1.w - f;
	var v_x2 = m.c2.x - f;
	var v_y2 = m.c2.y - f;
	var v_z2 = m.c2.z - f;
	var v_w2 = m.c2.w - f;
	var v_x3 = m.c3.x - f;
	var v_y3 = m.c3.y - f;
	var v_z3 = m.c3.z - f;
	var v_w3 = m.c3.w - f;
	var this1 = a.c0;
	this1.x = v_x;
	this1.y = v_y;
	this1.z = v_z;
	this1.w = v_w;
	var this1 = a.c1;
	this1.x = v_x1;
	this1.y = v_y1;
	this1.z = v_z1;
	this1.w = v_w1;
	var this1 = a.c2;
	this1.x = v_x2;
	this1.y = v_y2;
	this1.z = v_z2;
	this1.w = v_w2;
	var this1 = a.c3;
	this1.x = v_x3;
	this1.y = v_y3;
	this1.z = v_z3;
	this1.w = v_w3;
	return a;
};
Mat4.add = function(m,n) {
	var m1 = m;
	var n1 = n;
	var this1 = new Mat4Data(m1.c0.x + n1.c0.x,m1.c0.y + n1.c0.y,m1.c0.z + n1.c0.z,m1.c0.w + n1.c0.w,m1.c1.x + n1.c1.x,m1.c1.y + n1.c1.y,m1.c1.z + n1.c1.z,m1.c1.w + n1.c1.w,m1.c2.x + n1.c2.x,m1.c2.y + n1.c2.y,m1.c2.z + n1.c2.z,m1.c2.w + n1.c2.w,m1.c3.x + n1.c3.x,m1.c3.y + n1.c3.y,m1.c3.z + n1.c3.z,m1.c3.w + n1.c3.w);
	return this1;
};
Mat4.addScalar = function(m,f) {
	var m1 = m;
	var this1 = new Mat4Data(m1.c0.x + f,m1.c0.y + f,m1.c0.z + f,m1.c0.w + f,m1.c1.x + f,m1.c1.y + f,m1.c1.z + f,m1.c1.w + f,m1.c2.x + f,m1.c2.y + f,m1.c2.z + f,m1.c2.w + f,m1.c3.x + f,m1.c3.y + f,m1.c3.z + f,m1.c3.w + f);
	return this1;
};
Mat4.sub = function(m,n) {
	var m1 = m;
	var n1 = n;
	var this1 = new Mat4Data(m1.c0.x - n1.c0.x,m1.c0.y - n1.c0.y,m1.c0.z - n1.c0.z,m1.c0.w - n1.c0.w,m1.c1.x - n1.c1.x,m1.c1.y - n1.c1.y,m1.c1.z - n1.c1.z,m1.c1.w - n1.c1.w,m1.c2.x - n1.c2.x,m1.c2.y - n1.c2.y,m1.c2.z - n1.c2.z,m1.c2.w - n1.c2.w,m1.c3.x - n1.c3.x,m1.c3.y - n1.c3.y,m1.c3.z - n1.c3.z,m1.c3.w - n1.c3.w);
	return this1;
};
Mat4.subScalar = function(m,f) {
	var m1 = m;
	var this1 = new Mat4Data(m1.c0.x - f,m1.c0.y - f,m1.c0.z - f,m1.c0.w - f,m1.c1.x - f,m1.c1.y - f,m1.c1.z - f,m1.c1.w - f,m1.c2.x - f,m1.c2.y - f,m1.c2.z - f,m1.c2.w - f,m1.c3.x - f,m1.c3.y - f,m1.c3.z - f,m1.c3.w - f);
	return this1;
};
Mat4.subScalarInv = function(f,m) {
	var m1 = m;
	var this1 = new Mat4Data(f - m1.c0.x,f - m1.c0.y,f - m1.c0.z,f - m1.c0.w,f - m1.c1.x,f - m1.c1.y,f - m1.c1.z,f - m1.c1.w,f - m1.c2.x,f - m1.c2.y,f - m1.c2.z,f - m1.c2.w,f - m1.c3.x,f - m1.c3.y,f - m1.c3.z,f - m1.c3.w);
	return this1;
};
Mat4.mul = function(m,n) {
	var m1 = m;
	var n1 = n;
	var this1 = new Mat4Data(m1.c0.x * n1.c0.x + m1.c1.x * n1.c0.y + m1.c2.x * n1.c0.z + m1.c3.x * n1.c0.w,m1.c0.y * n1.c0.x + m1.c1.y * n1.c0.y + m1.c2.y * n1.c0.z + m1.c3.y * n1.c0.w,m1.c0.z * n1.c0.x + m1.c1.z * n1.c0.y + m1.c2.z * n1.c0.z + m1.c3.z * n1.c0.w,m1.c0.w * n1.c0.x + m1.c1.w * n1.c0.y + m1.c2.w * n1.c0.z + m1.c3.w * n1.c0.w,m1.c0.x * n1.c1.x + m1.c1.x * n1.c1.y + m1.c2.x * n1.c1.z + m1.c3.x * n1.c1.w,m1.c0.y * n1.c1.x + m1.c1.y * n1.c1.y + m1.c2.y * n1.c1.z + m1.c3.y * n1.c1.w,m1.c0.z * n1.c1.x + m1.c1.z * n1.c1.y + m1.c2.z * n1.c1.z + m1.c3.z * n1.c1.w,m1.c0.w * n1.c1.x + m1.c1.w * n1.c1.y + m1.c2.w * n1.c1.z + m1.c3.w * n1.c1.w,m1.c0.x * n1.c2.x + m1.c1.x * n1.c2.y + m1.c2.x * n1.c2.z + m1.c3.x * n1.c2.w,m1.c0.y * n1.c2.x + m1.c1.y * n1.c2.y + m1.c2.y * n1.c2.z + m1.c3.y * n1.c2.w,m1.c0.z * n1.c2.x + m1.c1.z * n1.c2.y + m1.c2.z * n1.c2.z + m1.c3.z * n1.c2.w,m1.c0.w * n1.c2.x + m1.c1.w * n1.c2.y + m1.c2.w * n1.c2.z + m1.c3.w * n1.c2.w,m1.c0.x * n1.c3.x + m1.c1.x * n1.c3.y + m1.c2.x * n1.c3.z + m1.c3.x * n1.c3.w,m1.c0.y * n1.c3.x + m1.c1.y * n1.c3.y + m1.c2.y * n1.c3.z + m1.c3.y * n1.c3.w,m1.c0.z * n1.c3.x + m1.c1.z * n1.c3.y + m1.c2.z * n1.c3.z + m1.c3.z * n1.c3.w,m1.c0.w * n1.c3.x + m1.c1.w * n1.c3.y + m1.c2.w * n1.c3.z + m1.c3.w * n1.c3.w);
	return this1;
};
Mat4.postMulVec4 = function(m,v) {
	var m1 = m;
	var this1 = new Vec4Data(m1.c0.x * v.x + m1.c1.x * v.y + m1.c2.x * v.z + m1.c3.x * v.w,m1.c0.y * v.x + m1.c1.y * v.y + m1.c2.y * v.z + m1.c3.y * v.w,m1.c0.z * v.x + m1.c1.z * v.y + m1.c2.z * v.z + m1.c3.z * v.w,m1.c0.w * v.x + m1.c1.w * v.y + m1.c2.w * v.z + m1.c3.w * v.w);
	return this1;
};
Mat4.preMulVec4 = function(v,m) {
	var m1 = m;
	var b = m1.c0;
	var b1 = m1.c1;
	var b2 = m1.c2;
	var b3 = m1.c3;
	var this1 = new Vec4Data(v.x * b.x + v.y * b.y + v.z * b.z + v.w * b.w,v.x * b1.x + v.y * b1.y + v.z * b1.z + v.w * b1.w,v.x * b2.x + v.y * b2.y + v.z * b2.z + v.w * b2.w,v.x * b3.x + v.y * b3.y + v.z * b3.z + v.w * b3.w);
	return this1;
};
Mat4.mulScalar = function(m,f) {
	var m1 = m;
	var this1 = new Mat4Data(m1.c0.x * f,m1.c0.y * f,m1.c0.z * f,m1.c0.w * f,m1.c1.x * f,m1.c1.y * f,m1.c1.z * f,m1.c1.w * f,m1.c2.x * f,m1.c2.y * f,m1.c2.z * f,m1.c2.w * f,m1.c3.x * f,m1.c3.y * f,m1.c3.z * f,m1.c3.w * f);
	return this1;
};
Mat4.div = function(m,n) {
	var m1 = n;
	var n_c0_x = 1.0 / m1.c0.x;
	var n_c0_y = 1.0 / m1.c0.y;
	var n_c0_z = 1.0 / m1.c0.z;
	var n_c0_w = 1.0 / m1.c0.w;
	var n_c1_x = 1.0 / m1.c1.x;
	var n_c1_y = 1.0 / m1.c1.y;
	var n_c1_z = 1.0 / m1.c1.z;
	var n_c1_w = 1.0 / m1.c1.w;
	var n_c2_x = 1.0 / m1.c2.x;
	var n_c2_y = 1.0 / m1.c2.y;
	var n_c2_z = 1.0 / m1.c2.z;
	var n_c2_w = 1.0 / m1.c2.w;
	var n_c3_x = 1.0 / m1.c3.x;
	var n_c3_y = 1.0 / m1.c3.y;
	var n_c3_z = 1.0 / m1.c3.z;
	var n_c3_w = 1.0 / m1.c3.w;
	var m1 = m;
	var this1 = new Mat4Data(m1.c0.x * n_c0_x,m1.c0.y * n_c0_y,m1.c0.z * n_c0_z,m1.c0.w * n_c0_w,m1.c1.x * n_c1_x,m1.c1.y * n_c1_y,m1.c1.z * n_c1_z,m1.c1.w * n_c1_w,m1.c2.x * n_c2_x,m1.c2.y * n_c2_y,m1.c2.z * n_c2_z,m1.c2.w * n_c2_w,m1.c3.x * n_c3_x,m1.c3.y * n_c3_y,m1.c3.z * n_c3_z,m1.c3.w * n_c3_w);
	return this1;
};
Mat4.divScalar = function(m,f) {
	var m1 = m;
	var this1 = new Mat4Data(m1.c0.x / f,m1.c0.y / f,m1.c0.z / f,m1.c0.w / f,m1.c1.x / f,m1.c1.y / f,m1.c1.z / f,m1.c1.w / f,m1.c2.x / f,m1.c2.y / f,m1.c2.z / f,m1.c2.w / f,m1.c3.x / f,m1.c3.y / f,m1.c3.z / f,m1.c3.w / f);
	return this1;
};
Mat4.divScalarInv = function(f,m) {
	var m1 = m;
	var this1 = new Mat4Data(f / m1.c0.x,f / m1.c0.y,f / m1.c0.z,f / m1.c0.w,f / m1.c1.x,f / m1.c1.y,f / m1.c1.z,f / m1.c1.w,f / m1.c2.x,f / m1.c2.y,f / m1.c2.z,f / m1.c2.w,f / m1.c3.x,f / m1.c3.y,f / m1.c3.z,f / m1.c3.w);
	return this1;
};
Mat4.equal = function(m,n) {
	var m1 = m;
	var n1 = n;
	var tmp;
	var tmp1;
	var a = m1.c0;
	var b = n1.c0;
	if(a.x == b.x && a.y == b.y && a.z == b.z && a.w == b.w) {
		var a = m1.c1;
		var b = n1.c1;
		tmp1 = a.x == b.x && a.y == b.y && a.z == b.z && a.w == b.w;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		var a = m1.c2;
		var b = n1.c2;
		tmp = a.x == b.x && a.y == b.y && a.z == b.z && a.w == b.w;
	} else {
		tmp = false;
	}
	if(tmp) {
		var a = m1.c3;
		var b = n1.c3;
		if(a.x == b.x && a.y == b.y && a.z == b.z) {
			return a.w == b.w;
		} else {
			return false;
		}
	} else {
		return false;
	}
};
Mat4.notEqual = function(m,n) {
	var m1 = m;
	var n1 = n;
	var tmp;
	var tmp1;
	var tmp2;
	var a = m1.c0;
	var b = n1.c0;
	if(a.x == b.x && a.y == b.y && a.z == b.z && a.w == b.w) {
		var a = m1.c1;
		var b = n1.c1;
		tmp2 = a.x == b.x && a.y == b.y && a.z == b.z && a.w == b.w;
	} else {
		tmp2 = false;
	}
	if(tmp2) {
		var a = m1.c2;
		var b = n1.c2;
		tmp1 = a.x == b.x && a.y == b.y && a.z == b.z && a.w == b.w;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		var a = m1.c3;
		var b = n1.c3;
		tmp = a.x == b.x && a.y == b.y && a.z == b.z && a.w == b.w;
	} else {
		tmp = false;
	}
	return !tmp;
};
var Mat4Data = function(a00,a01,a02,a03,a10,a11,a12,a13,a20,a21,a22,a23,a30,a31,a32,a33) {
	var this1 = new Vec4Data(a00,a01,a02,a03);
	this.c0 = this1;
	var this1 = new Vec4Data(a10,a11,a12,a13);
	this.c1 = this1;
	var this1 = new Vec4Data(a20,a21,a22,a23);
	this.c2 = this1;
	var this1 = new Vec4Data(a30,a31,a32,a33);
	this.c3 = this1;
};
var Vec2 = {};
Vec2.get_x = function(this1) {
	return this1.x;
};
Vec2.set_x = function(this1,v) {
	return this1.x = v;
};
Vec2.get_y = function(this1) {
	return this1.y;
};
Vec2.set_y = function(this1,v) {
	return this1.y = v;
};
Vec2._new = function(x,y) {
	var this1 = new Vec2Data(x,y);
	return this1;
};
Vec2.copyFrom = function(this1,v) {
	this1.x = v.x;
	this1.y = v.y;
	return this1;
};
Vec2.clone = function(this1) {
	var this2 = new Vec2Data(this1.x,this1.y);
	return this2;
};
Vec2.radians = function(this1) {
	var a = this1;
	var b = Math.PI;
	var a_x = a.x * b;
	var a_y = a.y * b;
	var this1 = new Vec2Data(a_x / 180,a_y / 180);
	return this1;
};
Vec2.degrees = function(this1) {
	var a = this1;
	var a_x = a.x * 180;
	var a_y = a.y * 180;
	var b = Math.PI;
	var this1 = new Vec2Data(a_x / b,a_y / b);
	return this1;
};
Vec2.sin = function(this1) {
	var this2 = new Vec2Data(Math.sin(this1.x),Math.sin(this1.y));
	return this2;
};
Vec2.cos = function(this1) {
	var this2 = new Vec2Data(Math.cos(this1.x),Math.cos(this1.y));
	return this2;
};
Vec2.tan = function(this1) {
	var this2 = new Vec2Data(Math.tan(this1.x),Math.tan(this1.y));
	return this2;
};
Vec2.asin = function(this1) {
	var this2 = new Vec2Data(Math.asin(this1.x),Math.asin(this1.y));
	return this2;
};
Vec2.acos = function(this1) {
	var this2 = new Vec2Data(Math.acos(this1.x),Math.acos(this1.y));
	return this2;
};
Vec2.atan = function(this1) {
	var this2 = new Vec2Data(Math.atan(this1.x),Math.atan(this1.y));
	return this2;
};
Vec2.atan2 = function(this1,b) {
	var this2 = new Vec2Data(Math.atan2(this1.x,b.x),Math.atan2(this1.y,b.y));
	return this2;
};
Vec2.pow = function(this1,e) {
	var this2 = new Vec2Data(Math.pow(this1.x,e.x),Math.pow(this1.y,e.y));
	return this2;
};
Vec2.exp = function(this1) {
	var this2 = new Vec2Data(Math.exp(this1.x),Math.exp(this1.y));
	return this2;
};
Vec2.log = function(this1) {
	var this2 = new Vec2Data(Math.log(this1.x),Math.log(this1.y));
	return this2;
};
Vec2.exp2 = function(this1) {
	var this2 = new Vec2Data(Math.pow(2,this1.x),Math.pow(2,this1.y));
	return this2;
};
Vec2.log2 = function(this1) {
	var v = this1.x;
	var l2 = Math.log(v) * 1.4426950408889634;
	var isPot;
	if(v % 1 == 0) {
		var i = v | 0;
		isPot = (i & i - 1) == 0;
	} else {
		isPot = false;
	}
	var v = this1.y;
	var l21 = Math.log(v) * 1.4426950408889634;
	var isPot1;
	if(v % 1 == 0) {
		var i = v | 0;
		isPot1 = (i & i - 1) == 0;
	} else {
		isPot1 = false;
	}
	var this1 = new Vec2Data(isPot ? Math.round(l2) : l2,isPot1 ? Math.round(l21) : l21);
	return this1;
};
Vec2.sqrt = function(this1) {
	var this2 = new Vec2Data(Math.sqrt(this1.x),Math.sqrt(this1.y));
	return this2;
};
Vec2.inverseSqrt = function(this1) {
	var b_x = Math.sqrt(this1.x);
	var b_y = Math.sqrt(this1.y);
	var this1 = new Vec2Data(1.0 / b_x,1.0 / b_y);
	return this1;
};
Vec2.abs = function(this1) {
	var this2 = new Vec2Data(Math.abs(this1.x),Math.abs(this1.y));
	return this2;
};
Vec2.sign = function(this1) {
	var this2 = new Vec2Data(this1.x > 0. ? 1. : this1.x < 0. ? -1. : 0.,this1.y > 0. ? 1. : this1.y < 0. ? -1. : 0.);
	return this2;
};
Vec2.floor = function(this1) {
	var this2 = new Vec2Data(Math.floor(this1.x),Math.floor(this1.y));
	return this2;
};
Vec2.ceil = function(this1) {
	var this2 = new Vec2Data(Math.ceil(this1.x),Math.ceil(this1.y));
	return this2;
};
Vec2.fract = function(this1) {
	var a = this1;
	var b_x = Math.floor(this1.x);
	var b_y = Math.floor(this1.y);
	var this1 = new Vec2Data(a.x - b_x,a.y - b_y);
	return this1;
};
Vec2.$length = function(this1) {
	return Math.sqrt(this1.x * this1.x + this1.y * this1.y);
};
Vec2.distance = function(this1,b) {
	var this_x = b.x - this1.x;
	var this_y = b.y - this1.y;
	return Math.sqrt(this_x * this_x + this_y * this_y);
};
Vec2.dot = function(this1,b) {
	return this1.x * b.x + this1.y * b.y;
};
Vec2.normalize = function(this1) {
	var v = this1;
	var lenSq = v.x * this1.x + v.y * this1.y;
	var denominator = lenSq == 0.0 ? 1.0 : Math.sqrt(lenSq);
	var this1 = new Vec2Data(v.x / denominator,v.y / denominator);
	return this1;
};
Vec2.faceforward = function(this1,I,Nref) {
	var a_x = this1.x;
	var a_y = this1.y;
	var b = Nref.x * I.x + Nref.y * I.y < 0 ? 1 : -1;
	var this1 = new Vec2Data(a_x * b,a_y * b);
	return this1;
};
Vec2.reflect = function(this1,N) {
	var I = this1;
	var lhs = 2 * (N.x * I.x + N.y * I.y);
	var rhs = N;
	var b_x = rhs.x * lhs;
	var b_y = rhs.y * lhs;
	var this1 = new Vec2Data(I.x - b_x,I.y - b_y);
	return this1;
};
Vec2.refract = function(this1,N,eta) {
	var I = this1;
	var nDotI = N.x * I.x + N.y * I.y;
	var k = 1.0 - eta * eta * (1.0 - nDotI * nDotI);
	var lhs = eta;
	var rhs = I;
	var a_x = rhs.x * lhs;
	var a_y = rhs.y * lhs;
	var lhs = eta * nDotI + Math.sqrt(k);
	var rhs = N;
	var b_x = rhs.x * lhs;
	var b_y = rhs.y * lhs;
	var a_x1 = a_x - b_x;
	var a_y1 = a_y - b_y;
	var b = k < 0.0 ? 0.0 : 1.0;
	var this1 = new Vec2Data(a_x1 * b,a_y1 * b);
	return this1;
};
Vec2.toString = function(this1) {
	return "vec2(" + this1.x + ", " + this1.y + ")";
};
Vec2.arrayRead = function(this1,i) {
	switch(i) {
	case 0:
		return this1.x;
	case 1:
		return this1.y;
	default:
		return null;
	}
};
Vec2.arrayWrite = function(this1,i,v) {
	switch(i) {
	case 0:
		return this1.x = v;
	case 1:
		return this1.y = v;
	default:
		return null;
	}
};
Vec2.neg = function(a) {
	var this1 = new Vec2Data(-a.x,-a.y);
	return this1;
};
Vec2.prefixIncrement = function(a) {
	a.x += 1;
	a.y += 1;
	var this1 = new Vec2Data(a.x,a.y);
	return this1;
};
Vec2.prefixDecrement = function(a) {
	a.x -= 1;
	a.y -= 1;
	var this1 = new Vec2Data(a.x,a.y);
	return this1;
};
Vec2.postfixIncrement = function(a) {
	var this1 = new Vec2Data(a.x,a.y);
	var ret = this1;
	a.x += 1;
	a.y += 1;
	return ret;
};
Vec2.postfixDecrement = function(a) {
	var this1 = new Vec2Data(a.x,a.y);
	var ret = this1;
	a.x -= 1;
	a.y -= 1;
	return ret;
};
Vec2.mulEq = function(a,b) {
	var v_x = a.x * b.x;
	var v_y = a.y * b.y;
	a.x = v_x;
	a.y = v_y;
	return a;
};
Vec2.mulEqMat = function(a,b) {
	var m = b;
	var b = m.c0;
	var b1 = m.c1;
	var v_x = a.x * b.x + a.y * b.y;
	var v_y = a.x * b1.x + a.y * b1.y;
	a.x = v_x;
	a.y = v_y;
	return a;
};
Vec2.mulEqScalar = function(a,f) {
	var v_x = a.x * f;
	var v_y = a.y * f;
	a.x = v_x;
	a.y = v_y;
	return a;
};
Vec2.divEq = function(a,b) {
	var v_x = a.x / b.x;
	var v_y = a.y / b.y;
	a.x = v_x;
	a.y = v_y;
	return a;
};
Vec2.divEqScalar = function(a,f) {
	var v_x = a.x / f;
	var v_y = a.y / f;
	a.x = v_x;
	a.y = v_y;
	return a;
};
Vec2.addEq = function(a,b) {
	var v_x = a.x + b.x;
	var v_y = a.y + b.y;
	a.x = v_x;
	a.y = v_y;
	return a;
};
Vec2.addEqScalar = function(a,f) {
	var v_x = a.x + f;
	var v_y = a.y + f;
	a.x = v_x;
	a.y = v_y;
	return a;
};
Vec2.subEq = function(a,b) {
	var v_x = a.x - b.x;
	var v_y = a.y - b.y;
	a.x = v_x;
	a.y = v_y;
	return a;
};
Vec2.subEqScalar = function(a,f) {
	var v_x = a.x - f;
	var v_y = a.y - f;
	a.x = v_x;
	a.y = v_y;
	return a;
};
Vec2.mul = function(a,b) {
	var this1 = new Vec2Data(a.x * b.x,a.y * b.y);
	return this1;
};
Vec2.mulScalar = function(a,b) {
	var this1 = new Vec2Data(a.x * b,a.y * b);
	return this1;
};
Vec2.div = function(a,b) {
	var this1 = new Vec2Data(a.x / b.x,a.y / b.y);
	return this1;
};
Vec2.divScalar = function(a,b) {
	var this1 = new Vec2Data(a.x / b,a.y / b);
	return this1;
};
Vec2.divScalarInv = function(a,b) {
	var this1 = new Vec2Data(a / b.x,a / b.y);
	return this1;
};
Vec2.add = function(a,b) {
	var this1 = new Vec2Data(a.x + b.x,a.y + b.y);
	return this1;
};
Vec2.addScalar = function(a,b) {
	var this1 = new Vec2Data(a.x + b,a.y + b);
	return this1;
};
Vec2.sub = function(a,b) {
	var this1 = new Vec2Data(a.x - b.x,a.y - b.y);
	return this1;
};
Vec2.subScalar = function(a,b) {
	var this1 = new Vec2Data(a.x - b,a.y - b);
	return this1;
};
Vec2.subScalarInv = function(a,b) {
	var this1 = new Vec2Data(a - b.x,a - b.y);
	return this1;
};
Vec2.equal = function(a,b) {
	if(a.x == b.x) {
		return a.y == b.y;
	} else {
		return false;
	}
};
Vec2.notEqual = function(a,b) {
	return !(a.x == b.x && a.y == b.y);
};
var Vec2Data = function(x,y) {
	this.x = x;
	this.y = y;
};
var Vec3 = {};
Vec3.get_x = function(this1) {
	return this1.x;
};
Vec3.set_x = function(this1,v) {
	return this1.x = v;
};
Vec3.get_y = function(this1) {
	return this1.y;
};
Vec3.set_y = function(this1,v) {
	return this1.y = v;
};
Vec3.get_z = function(this1) {
	return this1.z;
};
Vec3.set_z = function(this1,v) {
	return this1.z = v;
};
Vec3._new = function(x,y,z) {
	var this1 = new Vec3Data(x,y,z);
	return this1;
};
Vec3.copyFrom = function(this1,v) {
	this1.x = v.x;
	this1.y = v.y;
	this1.z = v.z;
	return this1;
};
Vec3.clone = function(this1) {
	var this2 = new Vec3Data(this1.x,this1.y,this1.z);
	return this2;
};
Vec3.cross = function(this1,b) {
	var this2 = new Vec3Data(this1.y * b.z - this1.z * b.y,this1.z * b.x - this1.x * b.z,this1.x * b.y - this1.y * b.x);
	return this2;
};
Vec3.radians = function(this1) {
	var a = this1;
	var b = Math.PI;
	var a_x = a.x * b;
	var a_y = a.y * b;
	var a_z = a.z * b;
	var this1 = new Vec3Data(a_x / 180,a_y / 180,a_z / 180);
	return this1;
};
Vec3.degrees = function(this1) {
	var a = this1;
	var a_x = a.x * 180;
	var a_y = a.y * 180;
	var a_z = a.z * 180;
	var b = Math.PI;
	var this1 = new Vec3Data(a_x / b,a_y / b,a_z / b);
	return this1;
};
Vec3.sin = function(this1) {
	var this2 = new Vec3Data(Math.sin(this1.x),Math.sin(this1.y),Math.sin(this1.z));
	return this2;
};
Vec3.cos = function(this1) {
	var this2 = new Vec3Data(Math.cos(this1.x),Math.cos(this1.y),Math.cos(this1.z));
	return this2;
};
Vec3.tan = function(this1) {
	var this2 = new Vec3Data(Math.tan(this1.x),Math.tan(this1.y),Math.tan(this1.z));
	return this2;
};
Vec3.asin = function(this1) {
	var this2 = new Vec3Data(Math.asin(this1.x),Math.asin(this1.y),Math.asin(this1.z));
	return this2;
};
Vec3.acos = function(this1) {
	var this2 = new Vec3Data(Math.acos(this1.x),Math.acos(this1.y),Math.acos(this1.z));
	return this2;
};
Vec3.atan = function(this1) {
	var this2 = new Vec3Data(Math.atan(this1.x),Math.atan(this1.y),Math.atan(this1.z));
	return this2;
};
Vec3.atan2 = function(this1,b) {
	var this2 = new Vec3Data(Math.atan2(this1.x,b.x),Math.atan2(this1.y,b.y),Math.atan2(this1.z,b.z));
	return this2;
};
Vec3.pow = function(this1,e) {
	var this2 = new Vec3Data(Math.pow(this1.x,e.x),Math.pow(this1.y,e.y),Math.pow(this1.z,e.z));
	return this2;
};
Vec3.exp = function(this1) {
	var this2 = new Vec3Data(Math.exp(this1.x),Math.exp(this1.y),Math.exp(this1.z));
	return this2;
};
Vec3.log = function(this1) {
	var this2 = new Vec3Data(Math.log(this1.x),Math.log(this1.y),Math.log(this1.z));
	return this2;
};
Vec3.exp2 = function(this1) {
	var this2 = new Vec3Data(Math.pow(2,this1.x),Math.pow(2,this1.y),Math.pow(2,this1.z));
	return this2;
};
Vec3.log2 = function(this1) {
	var v = this1.x;
	var l2 = Math.log(v) * 1.4426950408889634;
	var isPot;
	if(v % 1 == 0) {
		var i = v | 0;
		isPot = (i & i - 1) == 0;
	} else {
		isPot = false;
	}
	var v = this1.y;
	var l21 = Math.log(v) * 1.4426950408889634;
	var isPot1;
	if(v % 1 == 0) {
		var i = v | 0;
		isPot1 = (i & i - 1) == 0;
	} else {
		isPot1 = false;
	}
	var v = this1.z;
	var l22 = Math.log(v) * 1.4426950408889634;
	var isPot2;
	if(v % 1 == 0) {
		var i = v | 0;
		isPot2 = (i & i - 1) == 0;
	} else {
		isPot2 = false;
	}
	var this1 = new Vec3Data(isPot ? Math.round(l2) : l2,isPot1 ? Math.round(l21) : l21,isPot2 ? Math.round(l22) : l22);
	return this1;
};
Vec3.sqrt = function(this1) {
	var this2 = new Vec3Data(Math.sqrt(this1.x),Math.sqrt(this1.y),Math.sqrt(this1.z));
	return this2;
};
Vec3.inverseSqrt = function(this1) {
	var b_x = Math.sqrt(this1.x);
	var b_y = Math.sqrt(this1.y);
	var b_z = Math.sqrt(this1.z);
	var this1 = new Vec3Data(1.0 / b_x,1.0 / b_y,1.0 / b_z);
	return this1;
};
Vec3.abs = function(this1) {
	var this2 = new Vec3Data(Math.abs(this1.x),Math.abs(this1.y),Math.abs(this1.z));
	return this2;
};
Vec3.sign = function(this1) {
	var this2 = new Vec3Data(this1.x > 0. ? 1. : this1.x < 0. ? -1. : 0.,this1.y > 0. ? 1. : this1.y < 0. ? -1. : 0.,this1.z > 0. ? 1. : this1.z < 0. ? -1. : 0.);
	return this2;
};
Vec3.floor = function(this1) {
	var this2 = new Vec3Data(Math.floor(this1.x),Math.floor(this1.y),Math.floor(this1.z));
	return this2;
};
Vec3.ceil = function(this1) {
	var this2 = new Vec3Data(Math.ceil(this1.x),Math.ceil(this1.y),Math.ceil(this1.z));
	return this2;
};
Vec3.fract = function(this1) {
	var a = this1;
	var b_x = Math.floor(this1.x);
	var b_y = Math.floor(this1.y);
	var b_z = Math.floor(this1.z);
	var this1 = new Vec3Data(a.x - b_x,a.y - b_y,a.z - b_z);
	return this1;
};
Vec3.$length = function(this1) {
	return Math.sqrt(this1.x * this1.x + this1.y * this1.y + this1.z * this1.z);
};
Vec3.distance = function(this1,b) {
	var this_x = b.x - this1.x;
	var this_y = b.y - this1.y;
	var this_z = b.z - this1.z;
	return Math.sqrt(this_x * this_x + this_y * this_y + this_z * this_z);
};
Vec3.dot = function(this1,b) {
	return this1.x * b.x + this1.y * b.y + this1.z * b.z;
};
Vec3.normalize = function(this1) {
	var v = this1;
	var lenSq = v.x * this1.x + v.y * this1.y + v.z * this1.z;
	var denominator = lenSq == 0.0 ? 1.0 : Math.sqrt(lenSq);
	var this1 = new Vec3Data(v.x / denominator,v.y / denominator,v.z / denominator);
	return this1;
};
Vec3.faceforward = function(this1,I,Nref) {
	var a_x = this1.x;
	var a_y = this1.y;
	var a_z = this1.z;
	var b = Nref.x * I.x + Nref.y * I.y + Nref.z * I.z < 0 ? 1 : -1;
	var this1 = new Vec3Data(a_x * b,a_y * b,a_z * b);
	return this1;
};
Vec3.reflect = function(this1,N) {
	var I = this1;
	var lhs = 2 * (N.x * I.x + N.y * I.y + N.z * I.z);
	var rhs = N;
	var b_x = rhs.x * lhs;
	var b_y = rhs.y * lhs;
	var b_z = rhs.z * lhs;
	var this1 = new Vec3Data(I.x - b_x,I.y - b_y,I.z - b_z);
	return this1;
};
Vec3.refract = function(this1,N,eta) {
	var I = this1;
	var nDotI = N.x * I.x + N.y * I.y + N.z * I.z;
	var k = 1.0 - eta * eta * (1.0 - nDotI * nDotI);
	var lhs = eta;
	var rhs = I;
	var a_x = rhs.x * lhs;
	var a_y = rhs.y * lhs;
	var a_z = rhs.z * lhs;
	var lhs = eta * nDotI + Math.sqrt(k);
	var rhs = N;
	var b_x = rhs.x * lhs;
	var b_y = rhs.y * lhs;
	var b_z = rhs.z * lhs;
	var a_x1 = a_x - b_x;
	var a_y1 = a_y - b_y;
	var a_z1 = a_z - b_z;
	var b = k < 0.0 ? 0.0 : 1.0;
	var this1 = new Vec3Data(a_x1 * b,a_y1 * b,a_z1 * b);
	return this1;
};
Vec3.toString = function(this1) {
	return "vec3(" + this1.x + ", " + this1.y + ", " + this1.z + ")";
};
Vec3.arrayRead = function(this1,i) {
	switch(i) {
	case 0:
		return this1.x;
	case 1:
		return this1.y;
	case 2:
		return this1.z;
	default:
		return null;
	}
};
Vec3.arrayWrite = function(this1,i,v) {
	switch(i) {
	case 0:
		return this1.x = v;
	case 1:
		return this1.y = v;
	case 2:
		return this1.z = v;
	default:
		return null;
	}
};
Vec3.neg = function(a) {
	var this1 = new Vec3Data(-a.x,-a.y,-a.z);
	return this1;
};
Vec3.prefixIncrement = function(a) {
	a.x += 1;
	a.y += 1;
	a.z += 1;
	var this1 = new Vec3Data(a.x,a.y,a.z);
	return this1;
};
Vec3.prefixDecrement = function(a) {
	a.x -= 1;
	a.y -= 1;
	a.z -= 1;
	var this1 = new Vec3Data(a.x,a.y,a.z);
	return this1;
};
Vec3.postfixIncrement = function(a) {
	var this1 = new Vec3Data(a.x,a.y,a.z);
	var ret = this1;
	a.x += 1;
	a.y += 1;
	a.z += 1;
	return ret;
};
Vec3.postfixDecrement = function(a) {
	var this1 = new Vec3Data(a.x,a.y,a.z);
	var ret = this1;
	a.x -= 1;
	a.y -= 1;
	a.z -= 1;
	return ret;
};
Vec3.mulEq = function(a,b) {
	var v_x = a.x * b.x;
	var v_y = a.y * b.y;
	var v_z = a.z * b.z;
	a.x = v_x;
	a.y = v_y;
	a.z = v_z;
	return a;
};
Vec3.mulEqMat = function(a,b) {
	var m = b;
	var b = m.c0;
	var b1 = m.c1;
	var b2 = m.c2;
	var v_x = a.x * b.x + a.y * b.y + a.z * b.z;
	var v_y = a.x * b1.x + a.y * b1.y + a.z * b1.z;
	var v_z = a.x * b2.x + a.y * b2.y + a.z * b2.z;
	a.x = v_x;
	a.y = v_y;
	a.z = v_z;
	return a;
};
Vec3.mulEqScalar = function(a,f) {
	var v_x = a.x * f;
	var v_y = a.y * f;
	var v_z = a.z * f;
	a.x = v_x;
	a.y = v_y;
	a.z = v_z;
	return a;
};
Vec3.divEq = function(a,b) {
	var v_x = a.x / b.x;
	var v_y = a.y / b.y;
	var v_z = a.z / b.z;
	a.x = v_x;
	a.y = v_y;
	a.z = v_z;
	return a;
};
Vec3.divEqScalar = function(a,f) {
	var v_x = a.x / f;
	var v_y = a.y / f;
	var v_z = a.z / f;
	a.x = v_x;
	a.y = v_y;
	a.z = v_z;
	return a;
};
Vec3.addEq = function(a,b) {
	var v_x = a.x + b.x;
	var v_y = a.y + b.y;
	var v_z = a.z + b.z;
	a.x = v_x;
	a.y = v_y;
	a.z = v_z;
	return a;
};
Vec3.addEqScalar = function(a,f) {
	var v_x = a.x + f;
	var v_y = a.y + f;
	var v_z = a.z + f;
	a.x = v_x;
	a.y = v_y;
	a.z = v_z;
	return a;
};
Vec3.subEq = function(a,b) {
	var v_x = a.x - b.x;
	var v_y = a.y - b.y;
	var v_z = a.z - b.z;
	a.x = v_x;
	a.y = v_y;
	a.z = v_z;
	return a;
};
Vec3.subEqScalar = function(a,f) {
	var v_x = a.x - f;
	var v_y = a.y - f;
	var v_z = a.z - f;
	a.x = v_x;
	a.y = v_y;
	a.z = v_z;
	return a;
};
Vec3.mul = function(a,b) {
	var this1 = new Vec3Data(a.x * b.x,a.y * b.y,a.z * b.z);
	return this1;
};
Vec3.mulScalar = function(a,b) {
	var this1 = new Vec3Data(a.x * b,a.y * b,a.z * b);
	return this1;
};
Vec3.div = function(a,b) {
	var this1 = new Vec3Data(a.x / b.x,a.y / b.y,a.z / b.z);
	return this1;
};
Vec3.divScalar = function(a,b) {
	var this1 = new Vec3Data(a.x / b,a.y / b,a.z / b);
	return this1;
};
Vec3.divScalarInv = function(a,b) {
	var this1 = new Vec3Data(a / b.x,a / b.y,a / b.z);
	return this1;
};
Vec3.add = function(a,b) {
	var this1 = new Vec3Data(a.x + b.x,a.y + b.y,a.z + b.z);
	return this1;
};
Vec3.addScalar = function(a,b) {
	var this1 = new Vec3Data(a.x + b,a.y + b,a.z + b);
	return this1;
};
Vec3.sub = function(a,b) {
	var this1 = new Vec3Data(a.x - b.x,a.y - b.y,a.z - b.z);
	return this1;
};
Vec3.subScalar = function(a,b) {
	var this1 = new Vec3Data(a.x - b,a.y - b,a.z - b);
	return this1;
};
Vec3.subScalarInv = function(a,b) {
	var this1 = new Vec3Data(a - b.x,a - b.y,a - b.z);
	return this1;
};
Vec3.equal = function(a,b) {
	if(a.x == b.x && a.y == b.y) {
		return a.z == b.z;
	} else {
		return false;
	}
};
Vec3.notEqual = function(a,b) {
	return !(a.x == b.x && a.y == b.y && a.z == b.z);
};
var Vec3Data = function(x,y,z) {
	this.x = x;
	this.y = y;
	this.z = z;
};
var Vec4 = {};
Vec4.get_x = function(this1) {
	return this1.x;
};
Vec4.set_x = function(this1,v) {
	return this1.x = v;
};
Vec4.get_y = function(this1) {
	return this1.y;
};
Vec4.set_y = function(this1,v) {
	return this1.y = v;
};
Vec4.get_z = function(this1) {
	return this1.z;
};
Vec4.set_z = function(this1,v) {
	return this1.z = v;
};
Vec4.get_w = function(this1) {
	return this1.w;
};
Vec4.set_w = function(this1,v) {
	return this1.w = v;
};
Vec4._new = function(x,y,z,w) {
	var this1 = new Vec4Data(x,y,z,w);
	return this1;
};
Vec4.copyFrom = function(this1,v) {
	this1.x = v.x;
	this1.y = v.y;
	this1.z = v.z;
	this1.w = v.w;
	return this1;
};
Vec4.clone = function(this1) {
	var this2 = new Vec4Data(this1.x,this1.y,this1.z,this1.w);
	return this2;
};
Vec4.radians = function(this1) {
	var a = this1;
	var b = Math.PI;
	var a_x = a.x * b;
	var a_y = a.y * b;
	var a_z = a.z * b;
	var a_w = a.w * b;
	var this1 = new Vec4Data(a_x / 180,a_y / 180,a_z / 180,a_w / 180);
	return this1;
};
Vec4.degrees = function(this1) {
	var a = this1;
	var a_x = a.x * 180;
	var a_y = a.y * 180;
	var a_z = a.z * 180;
	var a_w = a.w * 180;
	var b = Math.PI;
	var this1 = new Vec4Data(a_x / b,a_y / b,a_z / b,a_w / b);
	return this1;
};
Vec4.sin = function(this1) {
	var this2 = new Vec4Data(Math.sin(this1.x),Math.sin(this1.y),Math.sin(this1.z),Math.sin(this1.w));
	return this2;
};
Vec4.cos = function(this1) {
	var this2 = new Vec4Data(Math.cos(this1.x),Math.cos(this1.y),Math.cos(this1.z),Math.cos(this1.w));
	return this2;
};
Vec4.tan = function(this1) {
	var this2 = new Vec4Data(Math.tan(this1.x),Math.tan(this1.y),Math.tan(this1.z),Math.tan(this1.w));
	return this2;
};
Vec4.asin = function(this1) {
	var this2 = new Vec4Data(Math.asin(this1.x),Math.asin(this1.y),Math.asin(this1.z),Math.asin(this1.w));
	return this2;
};
Vec4.acos = function(this1) {
	var this2 = new Vec4Data(Math.acos(this1.x),Math.acos(this1.y),Math.acos(this1.z),Math.acos(this1.w));
	return this2;
};
Vec4.atan = function(this1) {
	var this2 = new Vec4Data(Math.atan(this1.x),Math.atan(this1.y),Math.atan(this1.z),Math.atan(this1.w));
	return this2;
};
Vec4.atan2 = function(this1,b) {
	var this2 = new Vec4Data(Math.atan2(this1.x,b.x),Math.atan2(this1.y,b.y),Math.atan2(this1.z,b.z),Math.atan2(this1.w,b.w));
	return this2;
};
Vec4.pow = function(this1,e) {
	var this2 = new Vec4Data(Math.pow(this1.x,e.x),Math.pow(this1.y,e.y),Math.pow(this1.z,e.z),Math.pow(this1.w,e.w));
	return this2;
};
Vec4.exp = function(this1) {
	var this2 = new Vec4Data(Math.exp(this1.x),Math.exp(this1.y),Math.exp(this1.z),Math.exp(this1.w));
	return this2;
};
Vec4.log = function(this1) {
	var this2 = new Vec4Data(Math.log(this1.x),Math.log(this1.y),Math.log(this1.z),Math.log(this1.w));
	return this2;
};
Vec4.exp2 = function(this1) {
	var this2 = new Vec4Data(Math.pow(2,this1.x),Math.pow(2,this1.y),Math.pow(2,this1.z),Math.pow(2,this1.w));
	return this2;
};
Vec4.log2 = function(this1) {
	var v = this1.x;
	var l2 = Math.log(v) * 1.4426950408889634;
	var isPot;
	if(v % 1 == 0) {
		var i = v | 0;
		isPot = (i & i - 1) == 0;
	} else {
		isPot = false;
	}
	var v = this1.y;
	var l21 = Math.log(v) * 1.4426950408889634;
	var isPot1;
	if(v % 1 == 0) {
		var i = v | 0;
		isPot1 = (i & i - 1) == 0;
	} else {
		isPot1 = false;
	}
	var v = this1.z;
	var l22 = Math.log(v) * 1.4426950408889634;
	var isPot2;
	if(v % 1 == 0) {
		var i = v | 0;
		isPot2 = (i & i - 1) == 0;
	} else {
		isPot2 = false;
	}
	var v = this1.w;
	var l23 = Math.log(v) * 1.4426950408889634;
	var isPot3;
	if(v % 1 == 0) {
		var i = v | 0;
		isPot3 = (i & i - 1) == 0;
	} else {
		isPot3 = false;
	}
	var this1 = new Vec4Data(isPot ? Math.round(l2) : l2,isPot1 ? Math.round(l21) : l21,isPot2 ? Math.round(l22) : l22,isPot3 ? Math.round(l23) : l23);
	return this1;
};
Vec4.sqrt = function(this1) {
	var this2 = new Vec4Data(Math.sqrt(this1.x),Math.sqrt(this1.y),Math.sqrt(this1.z),Math.sqrt(this1.w));
	return this2;
};
Vec4.inverseSqrt = function(this1) {
	var b_x = Math.sqrt(this1.x);
	var b_y = Math.sqrt(this1.y);
	var b_z = Math.sqrt(this1.z);
	var b_w = Math.sqrt(this1.w);
	var this1 = new Vec4Data(1.0 / b_x,1.0 / b_y,1.0 / b_z,1.0 / b_w);
	return this1;
};
Vec4.abs = function(this1) {
	var this2 = new Vec4Data(Math.abs(this1.x),Math.abs(this1.y),Math.abs(this1.z),Math.abs(this1.w));
	return this2;
};
Vec4.sign = function(this1) {
	var this2 = new Vec4Data(this1.x > 0. ? 1. : this1.x < 0. ? -1. : 0.,this1.y > 0. ? 1. : this1.y < 0. ? -1. : 0.,this1.z > 0. ? 1. : this1.z < 0. ? -1. : 0.,this1.w > 0. ? 1. : this1.w < 0. ? -1. : 0.);
	return this2;
};
Vec4.floor = function(this1) {
	var this2 = new Vec4Data(Math.floor(this1.x),Math.floor(this1.y),Math.floor(this1.z),Math.floor(this1.w));
	return this2;
};
Vec4.ceil = function(this1) {
	var this2 = new Vec4Data(Math.ceil(this1.x),Math.ceil(this1.y),Math.ceil(this1.z),Math.ceil(this1.w));
	return this2;
};
Vec4.fract = function(this1) {
	var a = this1;
	var b_x = Math.floor(this1.x);
	var b_y = Math.floor(this1.y);
	var b_z = Math.floor(this1.z);
	var b_w = Math.floor(this1.w);
	var this1 = new Vec4Data(a.x - b_x,a.y - b_y,a.z - b_z,a.w - b_w);
	return this1;
};
Vec4.$length = function(this1) {
	return Math.sqrt(this1.x * this1.x + this1.y * this1.y + this1.z * this1.z + this1.w * this1.w);
};
Vec4.distance = function(this1,b) {
	var this_x = b.x - this1.x;
	var this_y = b.y - this1.y;
	var this_z = b.z - this1.z;
	var this_w = b.w - this1.w;
	return Math.sqrt(this_x * this_x + this_y * this_y + this_z * this_z + this_w * this_w);
};
Vec4.dot = function(this1,b) {
	return this1.x * b.x + this1.y * b.y + this1.z * b.z + this1.w * b.w;
};
Vec4.normalize = function(this1) {
	var v = this1;
	var lenSq = v.x * this1.x + v.y * this1.y + v.z * this1.z + v.w * this1.w;
	var denominator = lenSq == 0.0 ? 1.0 : Math.sqrt(lenSq);
	var this1 = new Vec4Data(v.x / denominator,v.y / denominator,v.z / denominator,v.w / denominator);
	return this1;
};
Vec4.faceforward = function(this1,I,Nref) {
	var a_x = this1.x;
	var a_y = this1.y;
	var a_z = this1.z;
	var a_w = this1.w;
	var b = Nref.x * I.x + Nref.y * I.y + Nref.z * I.z + Nref.w * I.w < 0 ? 1 : -1;
	var this1 = new Vec4Data(a_x * b,a_y * b,a_z * b,a_w * b);
	return this1;
};
Vec4.reflect = function(this1,N) {
	var I = this1;
	var lhs = 2 * (N.x * I.x + N.y * I.y + N.z * I.z + N.w * I.w);
	var rhs = N;
	var b_x = rhs.x * lhs;
	var b_y = rhs.y * lhs;
	var b_z = rhs.z * lhs;
	var b_w = rhs.w * lhs;
	var this1 = new Vec4Data(I.x - b_x,I.y - b_y,I.z - b_z,I.w - b_w);
	return this1;
};
Vec4.refract = function(this1,N,eta) {
	var I = this1;
	var nDotI = N.x * I.x + N.y * I.y + N.z * I.z + N.w * I.w;
	var k = 1.0 - eta * eta * (1.0 - nDotI * nDotI);
	var lhs = eta;
	var rhs = I;
	var a_x = rhs.x * lhs;
	var a_y = rhs.y * lhs;
	var a_z = rhs.z * lhs;
	var a_w = rhs.w * lhs;
	var lhs = eta * nDotI + Math.sqrt(k);
	var rhs = N;
	var b_x = rhs.x * lhs;
	var b_y = rhs.y * lhs;
	var b_z = rhs.z * lhs;
	var b_w = rhs.w * lhs;
	var a_x1 = a_x - b_x;
	var a_y1 = a_y - b_y;
	var a_z1 = a_z - b_z;
	var a_w1 = a_w - b_w;
	var b = k < 0.0 ? 0.0 : 1.0;
	var this1 = new Vec4Data(a_x1 * b,a_y1 * b,a_z1 * b,a_w1 * b);
	return this1;
};
Vec4.toString = function(this1) {
	return "vec4(" + this1.x + ", " + this1.y + ", " + this1.z + ", " + this1.w + ")";
};
Vec4.arrayRead = function(this1,i) {
	switch(i) {
	case 0:
		return this1.x;
	case 1:
		return this1.y;
	case 2:
		return this1.z;
	case 3:
		return this1.w;
	default:
		return null;
	}
};
Vec4.arrayWrite = function(this1,i,v) {
	switch(i) {
	case 0:
		return this1.x = v;
	case 1:
		return this1.y = v;
	case 2:
		return this1.z = v;
	case 3:
		return this1.w = v;
	default:
		return null;
	}
};
Vec4.neg = function(a) {
	var this1 = new Vec4Data(-a.x,-a.y,-a.z,-a.w);
	return this1;
};
Vec4.prefixIncrement = function(a) {
	a.x += 1;
	a.y += 1;
	a.z += 1;
	a.w += 1;
	var this1 = new Vec4Data(a.x,a.y,a.z,a.w);
	return this1;
};
Vec4.prefixDecrement = function(a) {
	a.x -= 1;
	a.y -= 1;
	a.z -= 1;
	a.w -= 1;
	var this1 = new Vec4Data(a.x,a.y,a.z,a.w);
	return this1;
};
Vec4.postfixIncrement = function(a) {
	var this1 = new Vec4Data(a.x,a.y,a.z,a.w);
	var ret = this1;
	a.x += 1;
	a.y += 1;
	a.z += 1;
	a.w += 1;
	return ret;
};
Vec4.postfixDecrement = function(a) {
	var this1 = new Vec4Data(a.x,a.y,a.z,a.w);
	var ret = this1;
	a.x -= 1;
	a.y -= 1;
	a.z -= 1;
	a.w -= 1;
	return ret;
};
Vec4.mulEq = function(a,b) {
	var v_x = a.x * b.x;
	var v_y = a.y * b.y;
	var v_z = a.z * b.z;
	var v_w = a.w * b.w;
	a.x = v_x;
	a.y = v_y;
	a.z = v_z;
	a.w = v_w;
	return a;
};
Vec4.mulEqMat = function(a,b) {
	var m = b;
	var b = m.c0;
	var b1 = m.c1;
	var b2 = m.c2;
	var b3 = m.c3;
	var v_x = a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;
	var v_y = a.x * b1.x + a.y * b1.y + a.z * b1.z + a.w * b1.w;
	var v_z = a.x * b2.x + a.y * b2.y + a.z * b2.z + a.w * b2.w;
	var v_w = a.x * b3.x + a.y * b3.y + a.z * b3.z + a.w * b3.w;
	a.x = v_x;
	a.y = v_y;
	a.z = v_z;
	a.w = v_w;
	return a;
};
Vec4.mulEqScalar = function(a,f) {
	var v_x = a.x * f;
	var v_y = a.y * f;
	var v_z = a.z * f;
	var v_w = a.w * f;
	a.x = v_x;
	a.y = v_y;
	a.z = v_z;
	a.w = v_w;
	return a;
};
Vec4.divEq = function(a,b) {
	var v_x = a.x / b.x;
	var v_y = a.y / b.y;
	var v_z = a.z / b.z;
	var v_w = a.w / b.w;
	a.x = v_x;
	a.y = v_y;
	a.z = v_z;
	a.w = v_w;
	return a;
};
Vec4.divEqScalar = function(a,f) {
	var v_x = a.x / f;
	var v_y = a.y / f;
	var v_z = a.z / f;
	var v_w = a.w / f;
	a.x = v_x;
	a.y = v_y;
	a.z = v_z;
	a.w = v_w;
	return a;
};
Vec4.addEq = function(a,b) {
	var v_x = a.x + b.x;
	var v_y = a.y + b.y;
	var v_z = a.z + b.z;
	var v_w = a.w + b.w;
	a.x = v_x;
	a.y = v_y;
	a.z = v_z;
	a.w = v_w;
	return a;
};
Vec4.addEqScalar = function(a,f) {
	var v_x = a.x + f;
	var v_y = a.y + f;
	var v_z = a.z + f;
	var v_w = a.w + f;
	a.x = v_x;
	a.y = v_y;
	a.z = v_z;
	a.w = v_w;
	return a;
};
Vec4.subEq = function(a,b) {
	var v_x = a.x - b.x;
	var v_y = a.y - b.y;
	var v_z = a.z - b.z;
	var v_w = a.w - b.w;
	a.x = v_x;
	a.y = v_y;
	a.z = v_z;
	a.w = v_w;
	return a;
};
Vec4.subEqScalar = function(a,f) {
	var v_x = a.x - f;
	var v_y = a.y - f;
	var v_z = a.z - f;
	var v_w = a.w - f;
	a.x = v_x;
	a.y = v_y;
	a.z = v_z;
	a.w = v_w;
	return a;
};
Vec4.mul = function(a,b) {
	var this1 = new Vec4Data(a.x * b.x,a.y * b.y,a.z * b.z,a.w * b.w);
	return this1;
};
Vec4.mulScalar = function(a,b) {
	var this1 = new Vec4Data(a.x * b,a.y * b,a.z * b,a.w * b);
	return this1;
};
Vec4.div = function(a,b) {
	var this1 = new Vec4Data(a.x / b.x,a.y / b.y,a.z / b.z,a.w / b.w);
	return this1;
};
Vec4.divScalar = function(a,b) {
	var this1 = new Vec4Data(a.x / b,a.y / b,a.z / b,a.w / b);
	return this1;
};
Vec4.divScalarInv = function(a,b) {
	var this1 = new Vec4Data(a / b.x,a / b.y,a / b.z,a / b.w);
	return this1;
};
Vec4.add = function(a,b) {
	var this1 = new Vec4Data(a.x + b.x,a.y + b.y,a.z + b.z,a.w + b.w);
	return this1;
};
Vec4.addScalar = function(a,b) {
	var this1 = new Vec4Data(a.x + b,a.y + b,a.z + b,a.w + b);
	return this1;
};
Vec4.sub = function(a,b) {
	var this1 = new Vec4Data(a.x - b.x,a.y - b.y,a.z - b.z,a.w - b.w);
	return this1;
};
Vec4.subScalar = function(a,b) {
	var this1 = new Vec4Data(a.x - b,a.y - b,a.z - b,a.w - b);
	return this1;
};
Vec4.subScalarInv = function(a,b) {
	var this1 = new Vec4Data(a - b.x,a - b.y,a - b.z,a - b.w);
	return this1;
};
Vec4.equal = function(a,b) {
	if(a.x == b.x && a.y == b.y && a.z == b.z) {
		return a.w == b.w;
	} else {
		return false;
	}
};
Vec4.notEqual = function(a,b) {
	return !(a.x == b.x && a.y == b.y && a.z == b.z && a.w == b.w);
};
var Vec4Data = function(x,y,z,w) {
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
function VectorMath_cross(a,b) {
	var this1 = new Vec3Data(a.y * b.z - a.z * b.y,a.z * b.x - a.x * b.z,a.x * b.y - a.y * b.x);
	return this1;
}
function VectorMath_log2f(v) {
	var l2 = Math.log(v) * 1.4426950408889634;
	var isPot;
	if(v % 1 == 0) {
		var i = v | 0;
		isPot = (i & i - 1) == 0;
	} else {
		isPot = false;
	}
	if(isPot) {
		return Math.round(l2);
	} else {
		return l2;
	}
}
var hcb = hcb || {};
if(!hcb.hide) hcb.hide = {};
hcb.hide.CollisionBoxBody = function(parent) {
	this.mass = 1;
	hrt.prefab.Object3D.call(this,parent);
	this.type = "collisionBoxBody";
};
hcb.hide.CollisionBoxBody.setDebugColor = function(color,mat) {
	var _this = mat.mshader.color__;
	_this.x = (color >> 16 & 255) / 255;
	_this.y = (color >> 8 & 255) / 255;
	_this.z = (color & 255) / 255;
	_this.w = (color >>> 24) / 255;
	var opaque = color >>> 24 == 255;
	mat.set_castShadows(false);
	mat.set_receiveShadows(false);
	if(opaque) {
		var alpha = mat.getPass("debuggeom_alpha");
		if(alpha != null) {
			mat.removePass(alpha);
		}
		mat.passes.setPassName("default");
		mat.passes.setBlendMode(h2d.BlendMode.None);
		mat.passes.set_depthWrite(true);
		mat.passes.set_culling(h3d.mat.Face.None);
	} else {
		mat.passes.setPassName("debuggeom");
		mat.passes.setBlendMode(h2d.BlendMode.Alpha);
		mat.passes.set_depthWrite(true);
		mat.passes.set_culling(h3d.mat.Face.Front);
		var alpha = mat.allocPass("debuggeom_alpha");
		alpha.setBlendMode(h2d.BlendMode.Alpha);
		alpha.set_culling(h3d.mat.Face.Back);
		alpha.set_depthWrite(false);
	}
};
hcb.hide.CollisionBoxBody.__super__ = hrt.prefab.Object3D;
hcb.hide.CollisionBoxBody.prototype = $extend(hrt.prefab.Object3D.prototype,{
	make: function(ctx) {
		ctx = ctx.clone(this);
		var mesh = new h3d.scene.Mesh(h3d.prim.Cube.defaultUnitCube(),null,ctx.local3d);
		mesh.material.set_blendMode(h2d.BlendMode.Alpha);
		mesh.material.mshader.color__.w = 0.1;
		ctx.local3d = mesh;
		ctx.local3d.name = this.name;
		this.updateInstance(ctx);
		return ctx;
	}
	,updateInstance: function(ctx,propName) {
		hrt.prefab.Object3D.prototype.updateInstance.call(this,ctx,propName);
	}
	,save: function() {
		var o = hrt.prefab.Object3D.prototype.save.call(this);
		o.mass = this.mass;
		return o;
	}
	,load: function(v) {
		hrt.prefab.Object3D.prototype.load.call(this,v);
		this.mass = v.mass;
	}
	,getHideProps: function() {
		return { icon : "square", name : "CollisionBoxBody"};
	}
	,edit: function(ctx) {
		var _gthis = this;
		hrt.prefab.Object3D.prototype.edit.call(this,ctx);
		var props = $("\r\n\t\t\t<div class=\"group\" name=\"Rigid Body\">\r\n\t\t\t\t<dl>\r\n\t\t\t\t\t<dt>Mass</dt>\r\n\t\t\t\t\t<dd><input type=\"range\" min=\"0\" max=\"100\" value=\"10\" field=\"mass\" /></dd>\r\n\t\t\t\t</dl>\r\n\t\t\t</div>\r\n            ");
		ctx.properties.add(props,this,function(propName) {
			ctx.onChange(_gthis,propName);
		});
	}
});
hcb.hide.CollisionBoxBody._ = hrt.prefab.Library.register("CollisionBoxBody",hcb.hide.CollisionBoxBody);

//# sourceMappingURL=hide-plugin.js.map